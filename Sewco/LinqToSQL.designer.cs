#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sewco
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="UsermanagementDB")]
	public partial class LinqToSQLDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDeviceType(DeviceType instance);
    partial void UpdateDeviceType(DeviceType instance);
    partial void DeleteDeviceType(DeviceType instance);
    partial void InsertMaterial(Material instance);
    partial void UpdateMaterial(Material instance);
    partial void DeleteMaterial(Material instance);
    partial void InsertMaterial_IOPosition(Material_IOPosition instance);
    partial void UpdateMaterial_IOPosition(Material_IOPosition instance);
    partial void DeleteMaterial_IOPosition(Material_IOPosition instance);
    partial void InsertMaterialProduct(MaterialProduct instance);
    partial void UpdateMaterialProduct(MaterialProduct instance);
    partial void DeleteMaterialProduct(MaterialProduct instance);
    partial void InsertMaterialType(MaterialType instance);
    partial void UpdateMaterialType(MaterialType instance);
    partial void DeleteMaterialType(MaterialType instance);
    partial void InsertMaterialTypeMaterial(MaterialTypeMaterial instance);
    partial void UpdateMaterialTypeMaterial(MaterialTypeMaterial instance);
    partial void DeleteMaterialTypeMaterial(MaterialTypeMaterial instance);
    partial void InsertOption(Option instance);
    partial void UpdateOption(Option instance);
    partial void DeleteOption(Option instance);
    partial void InsertProduction(Production instance);
    partial void UpdateProduction(Production instance);
    partial void DeleteProduction(Production instance);
    partial void InsertProductionCounter(ProductionCounter instance);
    partial void UpdateProductionCounter(ProductionCounter instance);
    partial void DeleteProductionCounter(ProductionCounter instance);
    partial void InsertProduct(Product instance);
    partial void UpdateProduct(Product instance);
    partial void DeleteProduct(Product instance);
    partial void Insertprofile(profile instance);
    partial void Updateprofile(profile instance);
    partial void Deleteprofile(profile instance);
    partial void InsertProject(Project instance);
    partial void UpdateProject(Project instance);
    partial void DeleteProject(Project instance);
    partial void InsertseamTemplate(seamTemplate instance);
    partial void UpdateseamTemplate(seamTemplate instance);
    partial void DeleteseamTemplate(seamTemplate instance);
    partial void InsertSetting(Setting instance);
    partial void UpdateSetting(Setting instance);
    partial void DeleteSetting(Setting instance);
    partial void Inserttbl_UserProfile(tbl_UserProfile instance);
    partial void Updatetbl_UserProfile(tbl_UserProfile instance);
    partial void Deletetbl_UserProfile(tbl_UserProfile instance);
    partial void InsertCovers(Covers instance);
    partial void UpdateCovers(Covers instance);
    partial void DeleteCovers(Covers instance);
    partial void InsertTypes(Types instance);
    partial void UpdateTypes(Types instance);
    partial void DeleteTypes(Types instance);
    partial void Inserttbl_User(tbl_User instance);
    partial void Updatetbl_User(tbl_User instance);
    partial void Deletetbl_User(tbl_User instance);
    #endregion
		
		public LinqToSQLDataContext() : 
				base(global::Sewco.Properties.Settings.Default.UsermanagementDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToSQLDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToSQLDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToSQLDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToSQLDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<DeviceType> DeviceTypes
		{
			get
			{
				return this.GetTable<DeviceType>();
			}
		}
		
		public System.Data.Linq.Table<Material> Materials
		{
			get
			{
				return this.GetTable<Material>();
			}
		}
		
		public System.Data.Linq.Table<Material_IOPosition> Material_IOPositions
		{
			get
			{
				return this.GetTable<Material_IOPosition>();
			}
		}
		
		public System.Data.Linq.Table<MaterialProduct> MaterialProducts
		{
			get
			{
				return this.GetTable<MaterialProduct>();
			}
		}
		
		public System.Data.Linq.Table<MaterialType> MaterialTypes
		{
			get
			{
				return this.GetTable<MaterialType>();
			}
		}
		
		public System.Data.Linq.Table<MaterialTypeMaterial> MaterialTypeMaterials
		{
			get
			{
				return this.GetTable<MaterialTypeMaterial>();
			}
		}
		
		public System.Data.Linq.Table<Option> Options
		{
			get
			{
				return this.GetTable<Option>();
			}
		}
		
		public System.Data.Linq.Table<Production> Productions
		{
			get
			{
				return this.GetTable<Production>();
			}
		}
		
		public System.Data.Linq.Table<ProductionCounter> ProductionCounters
		{
			get
			{
				return this.GetTable<ProductionCounter>();
			}
		}
		
		public System.Data.Linq.Table<Product> Products
		{
			get
			{
				return this.GetTable<Product>();
			}
		}
		
		public System.Data.Linq.Table<profile> profiles
		{
			get
			{
				return this.GetTable<profile>();
			}
		}
		
		public System.Data.Linq.Table<Project> Projects
		{
			get
			{
				return this.GetTable<Project>();
			}
		}
		
		public System.Data.Linq.Table<seamTemplate> seamTemplates
		{
			get
			{
				return this.GetTable<seamTemplate>();
			}
		}
		
		public System.Data.Linq.Table<Setting> Settings
		{
			get
			{
				return this.GetTable<Setting>();
			}
		}
		
		public System.Data.Linq.Table<tbl_UserProfile> tbl_UserProfiles
		{
			get
			{
				return this.GetTable<tbl_UserProfile>();
			}
		}
		
		public System.Data.Linq.Table<Covers> Covers
		{
			get
			{
				return this.GetTable<Covers>();
			}
		}
		
		public System.Data.Linq.Table<Types> Types
		{
			get
			{
				return this.GetTable<Types>();
			}
		}
		
		public System.Data.Linq.Table<tbl_User> tbl_Users
		{
			get
			{
				return this.GetTable<tbl_User>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DeviceType")]
	public partial class DeviceType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _deviceTypeId;
		
		private string _deviceName;
		
		private string _deviceAdress;
		
		private string _interfaceType;
		
		private EntitySet<Material_IOPosition> _Material_IOPositions;
		
		private EntitySet<Option> _Options;
		
		private EntitySet<Option> _Options1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OndeviceTypeIdChanging(int value);
    partial void OndeviceTypeIdChanged();
    partial void OndeviceNameChanging(string value);
    partial void OndeviceNameChanged();
    partial void OndeviceAdressChanging(string value);
    partial void OndeviceAdressChanged();
    partial void OninterfaceTypeChanging(string value);
    partial void OninterfaceTypeChanged();
    #endregion
		
		public DeviceType()
		{
			this._Material_IOPositions = new EntitySet<Material_IOPosition>(new Action<Material_IOPosition>(this.attach_Material_IOPositions), new Action<Material_IOPosition>(this.detach_Material_IOPositions));
			this._Options = new EntitySet<Option>(new Action<Option>(this.attach_Options), new Action<Option>(this.detach_Options));
			this._Options1 = new EntitySet<Option>(new Action<Option>(this.attach_Options1), new Action<Option>(this.detach_Options1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deviceTypeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int deviceTypeId
		{
			get
			{
				return this._deviceTypeId;
			}
			set
			{
				if ((this._deviceTypeId != value))
				{
					this.OndeviceTypeIdChanging(value);
					this.SendPropertyChanging();
					this._deviceTypeId = value;
					this.SendPropertyChanged("deviceTypeId");
					this.OndeviceTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deviceName", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string deviceName
		{
			get
			{
				return this._deviceName;
			}
			set
			{
				if ((this._deviceName != value))
				{
					this.OndeviceNameChanging(value);
					this.SendPropertyChanging();
					this._deviceName = value;
					this.SendPropertyChanged("deviceName");
					this.OndeviceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deviceAdress", DbType="VarChar(10)")]
		public string deviceAdress
		{
			get
			{
				return this._deviceAdress;
			}
			set
			{
				if ((this._deviceAdress != value))
				{
					this.OndeviceAdressChanging(value);
					this.SendPropertyChanging();
					this._deviceAdress = value;
					this.SendPropertyChanged("deviceAdress");
					this.OndeviceAdressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_interfaceType", DbType="VarChar(10)")]
		public string interfaceType
		{
			get
			{
				return this._interfaceType;
			}
			set
			{
				if ((this._interfaceType != value))
				{
					this.OninterfaceTypeChanging(value);
					this.SendPropertyChanging();
					this._interfaceType = value;
					this.SendPropertyChanged("interfaceType");
					this.OninterfaceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeviceType_Material_IOPosition", Storage="_Material_IOPositions", ThisKey="deviceTypeId", OtherKey="deviceTypeId")]
		public EntitySet<Material_IOPosition> Material_IOPositions
		{
			get
			{
				return this._Material_IOPositions;
			}
			set
			{
				this._Material_IOPositions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeviceType_Option", Storage="_Options", ThisKey="deviceTypeId", OtherKey="deviceTypeId1")]
		public EntitySet<Option> Options
		{
			get
			{
				return this._Options;
			}
			set
			{
				this._Options.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeviceType_Option1", Storage="_Options1", ThisKey="deviceTypeId", OtherKey="deviceTypeId2")]
		public EntitySet<Option> Options1
		{
			get
			{
				return this._Options1;
			}
			set
			{
				this._Options1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Material_IOPositions(Material_IOPosition entity)
		{
			this.SendPropertyChanging();
			entity.DeviceType = this;
		}
		
		private void detach_Material_IOPositions(Material_IOPosition entity)
		{
			this.SendPropertyChanging();
			entity.DeviceType = null;
		}
		
		private void attach_Options(Option entity)
		{
			this.SendPropertyChanging();
			entity.DeviceType = this;
		}
		
		private void detach_Options(Option entity)
		{
			this.SendPropertyChanging();
			entity.DeviceType = null;
		}
		
		private void attach_Options1(Option entity)
		{
			this.SendPropertyChanging();
			entity.DeviceType1 = this;
		}
		
		private void detach_Options1(Option entity)
		{
			this.SendPropertyChanging();
			entity.DeviceType1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Material")]
	public partial class Material : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _materialId;
		
		private string _code;
		
		private string _name;
		
		private bool _active;
		
		private int _minLength;
		
		private string _range;
		
		private string _imagePath;
		
		private EntitySet<MaterialProduct> _MaterialProducts;
		
		private EntitySet<MaterialTypeMaterial> _MaterialTypeMaterials;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaterialIdChanging(int value);
    partial void OnmaterialIdChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    partial void OnminLengthChanging(int value);
    partial void OnminLengthChanged();
    partial void OnrangeChanging(string value);
    partial void OnrangeChanged();
    partial void OnimagePathChanging(string value);
    partial void OnimagePathChanged();
    #endregion
		
		public Material()
		{
			this._MaterialProducts = new EntitySet<MaterialProduct>(new Action<MaterialProduct>(this.attach_MaterialProducts), new Action<MaterialProduct>(this.detach_MaterialProducts));
			this._MaterialTypeMaterials = new EntitySet<MaterialTypeMaterial>(new Action<MaterialTypeMaterial>(this.attach_MaterialTypeMaterials), new Action<MaterialTypeMaterial>(this.detach_MaterialTypeMaterials));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_materialId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int materialId
		{
			get
			{
				return this._materialId;
			}
			set
			{
				if ((this._materialId != value))
				{
					this.OnmaterialIdChanging(value);
					this.SendPropertyChanging();
					this._materialId = value;
					this.SendPropertyChanged("materialId");
					this.OnmaterialIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_minLength", DbType="Int NOT NULL")]
		public int minLength
		{
			get
			{
				return this._minLength;
			}
			set
			{
				if ((this._minLength != value))
				{
					this.OnminLengthChanging(value);
					this.SendPropertyChanging();
					this._minLength = value;
					this.SendPropertyChanged("minLength");
					this.OnminLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_range", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string range
		{
			get
			{
				return this._range;
			}
			set
			{
				if ((this._range != value))
				{
					this.OnrangeChanging(value);
					this.SendPropertyChanging();
					this._range = value;
					this.SendPropertyChanged("range");
					this.OnrangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_imagePath", DbType="VarChar(300)")]
		public string imagePath
		{
			get
			{
				return this._imagePath;
			}
			set
			{
				if ((this._imagePath != value))
				{
					this.OnimagePathChanging(value);
					this.SendPropertyChanging();
					this._imagePath = value;
					this.SendPropertyChanged("imagePath");
					this.OnimagePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Material_MaterialProduct", Storage="_MaterialProducts", ThisKey="materialId", OtherKey="materialId")]
		public EntitySet<MaterialProduct> MaterialProducts
		{
			get
			{
				return this._MaterialProducts;
			}
			set
			{
				this._MaterialProducts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Material_MaterialTypeMaterial", Storage="_MaterialTypeMaterials", ThisKey="materialId", OtherKey="materialId")]
		public EntitySet<MaterialTypeMaterial> MaterialTypeMaterials
		{
			get
			{
				return this._MaterialTypeMaterials;
			}
			set
			{
				this._MaterialTypeMaterials.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MaterialProducts(MaterialProduct entity)
		{
			this.SendPropertyChanging();
			entity.Material = this;
		}
		
		private void detach_MaterialProducts(MaterialProduct entity)
		{
			this.SendPropertyChanging();
			entity.Material = null;
		}
		
		private void attach_MaterialTypeMaterials(MaterialTypeMaterial entity)
		{
			this.SendPropertyChanging();
			entity.Material = this;
		}
		
		private void detach_MaterialTypeMaterials(MaterialTypeMaterial entity)
		{
			this.SendPropertyChanging();
			entity.Material = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Material_IOPositions")]
	public partial class Material_IOPosition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _projectId;
		
		private int _materialIOPosition;
		
		private int _materialTypeId;
		
		private int _deviceTypeId;
		
		private EntityRef<DeviceType> _DeviceType;
		
		private EntityRef<MaterialType> _MaterialType;
		
		private EntityRef<Project> _Project;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnprojectIdChanging(int value);
    partial void OnprojectIdChanged();
    partial void OnmaterialIOPositionChanging(int value);
    partial void OnmaterialIOPositionChanged();
    partial void OnmaterialTypeIdChanging(int value);
    partial void OnmaterialTypeIdChanged();
    partial void OndeviceTypeIdChanging(int value);
    partial void OndeviceTypeIdChanged();
    #endregion
		
		public Material_IOPosition()
		{
			this._DeviceType = default(EntityRef<DeviceType>);
			this._MaterialType = default(EntityRef<MaterialType>);
			this._Project = default(EntityRef<Project>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_projectId", DbType="Int NOT NULL")]
		public int projectId
		{
			get
			{
				return this._projectId;
			}
			set
			{
				if ((this._projectId != value))
				{
					if (this._Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnprojectIdChanging(value);
					this.SendPropertyChanging();
					this._projectId = value;
					this.SendPropertyChanged("projectId");
					this.OnprojectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_materialIOPosition", DbType="Int NOT NULL")]
		public int materialIOPosition
		{
			get
			{
				return this._materialIOPosition;
			}
			set
			{
				if ((this._materialIOPosition != value))
				{
					this.OnmaterialIOPositionChanging(value);
					this.SendPropertyChanging();
					this._materialIOPosition = value;
					this.SendPropertyChanged("materialIOPosition");
					this.OnmaterialIOPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_materialTypeId", DbType="Int NOT NULL")]
		public int materialTypeId
		{
			get
			{
				return this._materialTypeId;
			}
			set
			{
				if ((this._materialTypeId != value))
				{
					if (this._MaterialType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaterialTypeIdChanging(value);
					this.SendPropertyChanging();
					this._materialTypeId = value;
					this.SendPropertyChanged("materialTypeId");
					this.OnmaterialTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deviceTypeId", DbType="Int NOT NULL")]
		public int deviceTypeId
		{
			get
			{
				return this._deviceTypeId;
			}
			set
			{
				if ((this._deviceTypeId != value))
				{
					if (this._DeviceType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndeviceTypeIdChanging(value);
					this.SendPropertyChanging();
					this._deviceTypeId = value;
					this.SendPropertyChanged("deviceTypeId");
					this.OndeviceTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeviceType_Material_IOPosition", Storage="_DeviceType", ThisKey="deviceTypeId", OtherKey="deviceTypeId", IsForeignKey=true)]
		public DeviceType DeviceType
		{
			get
			{
				return this._DeviceType.Entity;
			}
			set
			{
				DeviceType previousValue = this._DeviceType.Entity;
				if (((previousValue != value) 
							|| (this._DeviceType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DeviceType.Entity = null;
						previousValue.Material_IOPositions.Remove(this);
					}
					this._DeviceType.Entity = value;
					if ((value != null))
					{
						value.Material_IOPositions.Add(this);
						this._deviceTypeId = value.deviceTypeId;
					}
					else
					{
						this._deviceTypeId = default(int);
					}
					this.SendPropertyChanged("DeviceType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MaterialType_Material_IOPosition", Storage="_MaterialType", ThisKey="materialTypeId", OtherKey="materialTypeId", IsForeignKey=true)]
		public MaterialType MaterialType
		{
			get
			{
				return this._MaterialType.Entity;
			}
			set
			{
				MaterialType previousValue = this._MaterialType.Entity;
				if (((previousValue != value) 
							|| (this._MaterialType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MaterialType.Entity = null;
						previousValue.Material_IOPositions.Remove(this);
					}
					this._MaterialType.Entity = value;
					if ((value != null))
					{
						value.Material_IOPositions.Add(this);
						this._materialTypeId = value.materialTypeId;
					}
					else
					{
						this._materialTypeId = default(int);
					}
					this.SendPropertyChanged("MaterialType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Material_IOPosition", Storage="_Project", ThisKey="projectId", OtherKey="projectId", IsForeignKey=true)]
		public Project Project
		{
			get
			{
				return this._Project.Entity;
			}
			set
			{
				Project previousValue = this._Project.Entity;
				if (((previousValue != value) 
							|| (this._Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project.Entity = null;
						previousValue.Material_IOPositions.Remove(this);
					}
					this._Project.Entity = value;
					if ((value != null))
					{
						value.Material_IOPositions.Add(this);
						this._projectId = value.projectId;
					}
					else
					{
						this._projectId = default(int);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MaterialProduct")]
	public partial class MaterialProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _productId;
		
		private int _materialIOPosition;
		
		private int _materialId;
		
		private EntityRef<Material> _Material;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnproductIdChanging(int value);
    partial void OnproductIdChanged();
    partial void OnmaterialIOPositionChanging(int value);
    partial void OnmaterialIOPositionChanged();
    partial void OnmaterialIdChanging(int value);
    partial void OnmaterialIdChanged();
    #endregion
		
		public MaterialProduct()
		{
			this._Material = default(EntityRef<Material>);
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int productId
		{
			get
			{
				return this._productId;
			}
			set
			{
				if ((this._productId != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductIdChanging(value);
					this.SendPropertyChanging();
					this._productId = value;
					this.SendPropertyChanged("productId");
					this.OnproductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_materialIOPosition", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int materialIOPosition
		{
			get
			{
				return this._materialIOPosition;
			}
			set
			{
				if ((this._materialIOPosition != value))
				{
					this.OnmaterialIOPositionChanging(value);
					this.SendPropertyChanging();
					this._materialIOPosition = value;
					this.SendPropertyChanged("materialIOPosition");
					this.OnmaterialIOPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_materialId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int materialId
		{
			get
			{
				return this._materialId;
			}
			set
			{
				if ((this._materialId != value))
				{
					if (this._Material.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaterialIdChanging(value);
					this.SendPropertyChanging();
					this._materialId = value;
					this.SendPropertyChanged("materialId");
					this.OnmaterialIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Material_MaterialProduct", Storage="_Material", ThisKey="materialId", OtherKey="materialId", IsForeignKey=true)]
		public Material Material
		{
			get
			{
				return this._Material.Entity;
			}
			set
			{
				Material previousValue = this._Material.Entity;
				if (((previousValue != value) 
							|| (this._Material.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Material.Entity = null;
						previousValue.MaterialProducts.Remove(this);
					}
					this._Material.Entity = value;
					if ((value != null))
					{
						value.MaterialProducts.Add(this);
						this._materialId = value.materialId;
					}
					else
					{
						this._materialId = default(int);
					}
					this.SendPropertyChanged("Material");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_MaterialProduct", Storage="_Product", ThisKey="productId", OtherKey="productId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.MaterialProducts.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.MaterialProducts.Add(this);
						this._productId = value.productId;
					}
					else
					{
						this._productId = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MaterialType")]
	public partial class MaterialType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _materialTypeId;
		
		private string _name;
		
		private EntitySet<Material_IOPosition> _Material_IOPositions;
		
		private EntitySet<MaterialTypeMaterial> _MaterialTypeMaterials;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaterialTypeIdChanging(int value);
    partial void OnmaterialTypeIdChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public MaterialType()
		{
			this._Material_IOPositions = new EntitySet<Material_IOPosition>(new Action<Material_IOPosition>(this.attach_Material_IOPositions), new Action<Material_IOPosition>(this.detach_Material_IOPositions));
			this._MaterialTypeMaterials = new EntitySet<MaterialTypeMaterial>(new Action<MaterialTypeMaterial>(this.attach_MaterialTypeMaterials), new Action<MaterialTypeMaterial>(this.detach_MaterialTypeMaterials));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_materialTypeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int materialTypeId
		{
			get
			{
				return this._materialTypeId;
			}
			set
			{
				if ((this._materialTypeId != value))
				{
					this.OnmaterialTypeIdChanging(value);
					this.SendPropertyChanging();
					this._materialTypeId = value;
					this.SendPropertyChanged("materialTypeId");
					this.OnmaterialTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MaterialType_Material_IOPosition", Storage="_Material_IOPositions", ThisKey="materialTypeId", OtherKey="materialTypeId")]
		public EntitySet<Material_IOPosition> Material_IOPositions
		{
			get
			{
				return this._Material_IOPositions;
			}
			set
			{
				this._Material_IOPositions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MaterialType_MaterialTypeMaterial", Storage="_MaterialTypeMaterials", ThisKey="materialTypeId", OtherKey="materialTypeId")]
		public EntitySet<MaterialTypeMaterial> MaterialTypeMaterials
		{
			get
			{
				return this._MaterialTypeMaterials;
			}
			set
			{
				this._MaterialTypeMaterials.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Material_IOPositions(Material_IOPosition entity)
		{
			this.SendPropertyChanging();
			entity.MaterialType = this;
		}
		
		private void detach_Material_IOPositions(Material_IOPosition entity)
		{
			this.SendPropertyChanging();
			entity.MaterialType = null;
		}
		
		private void attach_MaterialTypeMaterials(MaterialTypeMaterial entity)
		{
			this.SendPropertyChanging();
			entity.MaterialType = this;
		}
		
		private void detach_MaterialTypeMaterials(MaterialTypeMaterial entity)
		{
			this.SendPropertyChanging();
			entity.MaterialType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MaterialTypeMaterial")]
	public partial class MaterialTypeMaterial : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _materialId;
		
		private int _materialTypeId;
		
		private EntityRef<Material> _Material;
		
		private EntityRef<MaterialType> _MaterialType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnmaterialIdChanging(int value);
    partial void OnmaterialIdChanged();
    partial void OnmaterialTypeIdChanging(int value);
    partial void OnmaterialTypeIdChanged();
    #endregion
		
		public MaterialTypeMaterial()
		{
			this._Material = default(EntityRef<Material>);
			this._MaterialType = default(EntityRef<MaterialType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_materialId", DbType="Int NOT NULL")]
		public int materialId
		{
			get
			{
				return this._materialId;
			}
			set
			{
				if ((this._materialId != value))
				{
					if (this._Material.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaterialIdChanging(value);
					this.SendPropertyChanging();
					this._materialId = value;
					this.SendPropertyChanged("materialId");
					this.OnmaterialIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_materialTypeId", DbType="Int NOT NULL")]
		public int materialTypeId
		{
			get
			{
				return this._materialTypeId;
			}
			set
			{
				if ((this._materialTypeId != value))
				{
					if (this._MaterialType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaterialTypeIdChanging(value);
					this.SendPropertyChanging();
					this._materialTypeId = value;
					this.SendPropertyChanged("materialTypeId");
					this.OnmaterialTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Material_MaterialTypeMaterial", Storage="_Material", ThisKey="materialId", OtherKey="materialId", IsForeignKey=true)]
		public Material Material
		{
			get
			{
				return this._Material.Entity;
			}
			set
			{
				Material previousValue = this._Material.Entity;
				if (((previousValue != value) 
							|| (this._Material.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Material.Entity = null;
						previousValue.MaterialTypeMaterials.Remove(this);
					}
					this._Material.Entity = value;
					if ((value != null))
					{
						value.MaterialTypeMaterials.Add(this);
						this._materialId = value.materialId;
					}
					else
					{
						this._materialId = default(int);
					}
					this.SendPropertyChanged("Material");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MaterialType_MaterialTypeMaterial", Storage="_MaterialType", ThisKey="materialTypeId", OtherKey="materialTypeId", IsForeignKey=true)]
		public MaterialType MaterialType
		{
			get
			{
				return this._MaterialType.Entity;
			}
			set
			{
				MaterialType previousValue = this._MaterialType.Entity;
				if (((previousValue != value) 
							|| (this._MaterialType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MaterialType.Entity = null;
						previousValue.MaterialTypeMaterials.Remove(this);
					}
					this._MaterialType.Entity = value;
					if ((value != null))
					{
						value.MaterialTypeMaterials.Add(this);
						this._materialTypeId = value.materialTypeId;
					}
					else
					{
						this._materialTypeId = default(int);
					}
					this.SendPropertyChanged("MaterialType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Options")]
	public partial class Option : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _optionId;
		
		private int _projectId;
		
		private int _deviceTypeId1;
		
		private int _deviceTypeId2;
		
		private EntityRef<DeviceType> _DeviceType;
		
		private EntityRef<DeviceType> _DeviceType1;
		
		private EntityRef<Project> _Project;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnoptionIdChanging(int value);
    partial void OnoptionIdChanged();
    partial void OnprojectIdChanging(int value);
    partial void OnprojectIdChanged();
    partial void OndeviceTypeId1Changing(int value);
    partial void OndeviceTypeId1Changed();
    partial void OndeviceTypeId2Changing(int value);
    partial void OndeviceTypeId2Changed();
    #endregion
		
		public Option()
		{
			this._DeviceType = default(EntityRef<DeviceType>);
			this._DeviceType1 = default(EntityRef<DeviceType>);
			this._Project = default(EntityRef<Project>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_optionId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int optionId
		{
			get
			{
				return this._optionId;
			}
			set
			{
				if ((this._optionId != value))
				{
					this.OnoptionIdChanging(value);
					this.SendPropertyChanging();
					this._optionId = value;
					this.SendPropertyChanged("optionId");
					this.OnoptionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_projectId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int projectId
		{
			get
			{
				return this._projectId;
			}
			set
			{
				if ((this._projectId != value))
				{
					if (this._Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnprojectIdChanging(value);
					this.SendPropertyChanging();
					this._projectId = value;
					this.SendPropertyChanged("projectId");
					this.OnprojectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deviceTypeId1", DbType="Int NOT NULL")]
		public int deviceTypeId1
		{
			get
			{
				return this._deviceTypeId1;
			}
			set
			{
				if ((this._deviceTypeId1 != value))
				{
					if (this._DeviceType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndeviceTypeId1Changing(value);
					this.SendPropertyChanging();
					this._deviceTypeId1 = value;
					this.SendPropertyChanged("deviceTypeId1");
					this.OndeviceTypeId1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deviceTypeId2", DbType="Int NOT NULL")]
		public int deviceTypeId2
		{
			get
			{
				return this._deviceTypeId2;
			}
			set
			{
				if ((this._deviceTypeId2 != value))
				{
					if (this._DeviceType1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndeviceTypeId2Changing(value);
					this.SendPropertyChanging();
					this._deviceTypeId2 = value;
					this.SendPropertyChanged("deviceTypeId2");
					this.OndeviceTypeId2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeviceType_Option", Storage="_DeviceType", ThisKey="deviceTypeId1", OtherKey="deviceTypeId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public DeviceType DeviceType
		{
			get
			{
				return this._DeviceType.Entity;
			}
			set
			{
				DeviceType previousValue = this._DeviceType.Entity;
				if (((previousValue != value) 
							|| (this._DeviceType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DeviceType.Entity = null;
						previousValue.Options.Remove(this);
					}
					this._DeviceType.Entity = value;
					if ((value != null))
					{
						value.Options.Add(this);
						this._deviceTypeId1 = value.deviceTypeId;
					}
					else
					{
						this._deviceTypeId1 = default(int);
					}
					this.SendPropertyChanged("DeviceType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeviceType_Option1", Storage="_DeviceType1", ThisKey="deviceTypeId2", OtherKey="deviceTypeId", IsForeignKey=true)]
		public DeviceType DeviceType1
		{
			get
			{
				return this._DeviceType1.Entity;
			}
			set
			{
				DeviceType previousValue = this._DeviceType1.Entity;
				if (((previousValue != value) 
							|| (this._DeviceType1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DeviceType1.Entity = null;
						previousValue.Options1.Remove(this);
					}
					this._DeviceType1.Entity = value;
					if ((value != null))
					{
						value.Options1.Add(this);
						this._deviceTypeId2 = value.deviceTypeId;
					}
					else
					{
						this._deviceTypeId2 = default(int);
					}
					this.SendPropertyChanged("DeviceType1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Option", Storage="_Project", ThisKey="projectId", OtherKey="projectId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Project Project
		{
			get
			{
				return this._Project.Entity;
			}
			set
			{
				Project previousValue = this._Project.Entity;
				if (((previousValue != value) 
							|| (this._Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project.Entity = null;
						previousValue.Options.Remove(this);
					}
					this._Project.Entity = value;
					if ((value != null))
					{
						value.Options.Add(this);
						this._projectId = value.projectId;
					}
					else
					{
						this._projectId = default(int);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Production")]
	public partial class Production : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _projectId;
		
		private int _productId;
		
		private int _batchDone;
		
		private int _batchTotal;
		
		private EntityRef<Product> _Product;
		
		private EntityRef<Project> _Project;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnprojectIdChanging(int value);
    partial void OnprojectIdChanged();
    partial void OnproductIdChanging(int value);
    partial void OnproductIdChanged();
    partial void OnbatchDoneChanging(int value);
    partial void OnbatchDoneChanged();
    partial void OnbatchTotalChanging(int value);
    partial void OnbatchTotalChanged();
    #endregion
		
		public Production()
		{
			this._Product = default(EntityRef<Product>);
			this._Project = default(EntityRef<Project>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_projectId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int projectId
		{
			get
			{
				return this._projectId;
			}
			set
			{
				if ((this._projectId != value))
				{
					if (this._Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnprojectIdChanging(value);
					this.SendPropertyChanging();
					this._projectId = value;
					this.SendPropertyChanged("projectId");
					this.OnprojectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int productId
		{
			get
			{
				return this._productId;
			}
			set
			{
				if ((this._productId != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductIdChanging(value);
					this.SendPropertyChanging();
					this._productId = value;
					this.SendPropertyChanged("productId");
					this.OnproductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_batchDone", DbType="Int NOT NULL")]
		public int batchDone
		{
			get
			{
				return this._batchDone;
			}
			set
			{
				if ((this._batchDone != value))
				{
					this.OnbatchDoneChanging(value);
					this.SendPropertyChanging();
					this._batchDone = value;
					this.SendPropertyChanged("batchDone");
					this.OnbatchDoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_batchTotal", DbType="Int NOT NULL")]
		public int batchTotal
		{
			get
			{
				return this._batchTotal;
			}
			set
			{
				if ((this._batchTotal != value))
				{
					this.OnbatchTotalChanging(value);
					this.SendPropertyChanging();
					this._batchTotal = value;
					this.SendPropertyChanged("batchTotal");
					this.OnbatchTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Production", Storage="_Product", ThisKey="productId", OtherKey="productId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.Productions.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.Productions.Add(this);
						this._productId = value.productId;
					}
					else
					{
						this._productId = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Production", Storage="_Project", ThisKey="projectId", OtherKey="projectId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Project Project
		{
			get
			{
				return this._Project.Entity;
			}
			set
			{
				Project previousValue = this._Project.Entity;
				if (((previousValue != value) 
							|| (this._Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project.Entity = null;
						previousValue.Productions.Remove(this);
					}
					this._Project.Entity = value;
					if ((value != null))
					{
						value.Productions.Add(this);
						this._projectId = value.projectId;
					}
					else
					{
						this._projectId = default(int);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductionCounter")]
	public partial class ProductionCounter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _projectId;
		
		private int _productId;
		
		private int _counterValue;
		
		private int _TotalCounterValue;
		
		private System.DateTime _firstProductInProjectCounterTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnprojectIdChanging(int value);
    partial void OnprojectIdChanged();
    partial void OnproductIdChanging(int value);
    partial void OnproductIdChanged();
    partial void OncounterValueChanging(int value);
    partial void OncounterValueChanged();
    partial void OnTotalCounterValueChanging(int value);
    partial void OnTotalCounterValueChanged();
    partial void OnfirstProductInProjectCounterTimeChanging(System.DateTime value);
    partial void OnfirstProductInProjectCounterTimeChanged();
    #endregion
		
		public ProductionCounter()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_projectId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int projectId
		{
			get
			{
				return this._projectId;
			}
			set
			{
				if ((this._projectId != value))
				{
					this.OnprojectIdChanging(value);
					this.SendPropertyChanging();
					this._projectId = value;
					this.SendPropertyChanged("projectId");
					this.OnprojectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int productId
		{
			get
			{
				return this._productId;
			}
			set
			{
				if ((this._productId != value))
				{
					this.OnproductIdChanging(value);
					this.SendPropertyChanging();
					this._productId = value;
					this.SendPropertyChanged("productId");
					this.OnproductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_counterValue", DbType="Int NOT NULL")]
		public int counterValue
		{
			get
			{
				return this._counterValue;
			}
			set
			{
				if ((this._counterValue != value))
				{
					this.OncounterValueChanging(value);
					this.SendPropertyChanging();
					this._counterValue = value;
					this.SendPropertyChanged("counterValue");
					this.OncounterValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCounterValue", DbType="Int NOT NULL")]
		public int TotalCounterValue
		{
			get
			{
				return this._TotalCounterValue;
			}
			set
			{
				if ((this._TotalCounterValue != value))
				{
					this.OnTotalCounterValueChanging(value);
					this.SendPropertyChanging();
					this._TotalCounterValue = value;
					this.SendPropertyChanged("TotalCounterValue");
					this.OnTotalCounterValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstProductInProjectCounterTime", DbType="DateTime NOT NULL")]
		public System.DateTime firstProductInProjectCounterTime
		{
			get
			{
				return this._firstProductInProjectCounterTime;
			}
			set
			{
				if ((this._firstProductInProjectCounterTime != value))
				{
					this.OnfirstProductInProjectCounterTimeChanging(value);
					this.SendPropertyChanging();
					this._firstProductInProjectCounterTime = value;
					this.SendPropertyChanged("firstProductInProjectCounterTime");
					this.OnfirstProductInProjectCounterTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Products")]
	public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _productId;
		
		private string _code;
		
		private string _name;
		
		private System.Nullable<bool> _active;
		
		private System.Nullable<int> _coverId;
		
		private System.Nullable<int> _typeId;
		
		private System.Nullable<int> _projectId;
		
		private System.Nullable<int> _profileId;
		
		private string _imagePath;
		
		private EntitySet<MaterialProduct> _MaterialProducts;
		
		private EntitySet<Production> _Productions;
		
		private EntityRef<profile> _profile;
		
		private EntityRef<Project> _Project;
		
		private EntityRef<Covers> _Covers;
		
		private EntityRef<Types> _Types;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnproductIdChanging(int value);
    partial void OnproductIdChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnactiveChanging(System.Nullable<bool> value);
    partial void OnactiveChanged();
    partial void OncoverIdChanging(System.Nullable<int> value);
    partial void OncoverIdChanged();
    partial void OntypeIdChanging(System.Nullable<int> value);
    partial void OntypeIdChanged();
    partial void OnprojectIdChanging(System.Nullable<int> value);
    partial void OnprojectIdChanged();
    partial void OnprofileIdChanging(System.Nullable<int> value);
    partial void OnprofileIdChanged();
    partial void OnimagePathChanging(string value);
    partial void OnimagePathChanged();
    #endregion
		
		public Product()
		{
			this._MaterialProducts = new EntitySet<MaterialProduct>(new Action<MaterialProduct>(this.attach_MaterialProducts), new Action<MaterialProduct>(this.detach_MaterialProducts));
			this._Productions = new EntitySet<Production>(new Action<Production>(this.attach_Productions), new Action<Production>(this.detach_Productions));
			this._profile = default(EntityRef<profile>);
			this._Project = default(EntityRef<Project>);
			this._Covers = default(EntityRef<Covers>);
			this._Types = default(EntityRef<Types>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int productId
		{
			get
			{
				return this._productId;
			}
			set
			{
				if ((this._productId != value))
				{
					this.OnproductIdChanging(value);
					this.SendPropertyChanging();
					this._productId = value;
					this.SendPropertyChanged("productId");
					this.OnproductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="VarChar(50)")]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit")]
		public System.Nullable<bool> active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_coverId", DbType="Int")]
		public System.Nullable<int> coverId
		{
			get
			{
				return this._coverId;
			}
			set
			{
				if ((this._coverId != value))
				{
					if (this._Covers.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncoverIdChanging(value);
					this.SendPropertyChanging();
					this._coverId = value;
					this.SendPropertyChanged("coverId");
					this.OncoverIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typeId", DbType="Int")]
		public System.Nullable<int> typeId
		{
			get
			{
				return this._typeId;
			}
			set
			{
				if ((this._typeId != value))
				{
					if (this._Types.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OntypeIdChanging(value);
					this.SendPropertyChanging();
					this._typeId = value;
					this.SendPropertyChanged("typeId");
					this.OntypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_projectId", DbType="Int")]
		public System.Nullable<int> projectId
		{
			get
			{
				return this._projectId;
			}
			set
			{
				if ((this._projectId != value))
				{
					if (this._Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnprojectIdChanging(value);
					this.SendPropertyChanging();
					this._projectId = value;
					this.SendPropertyChanged("projectId");
					this.OnprojectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_profileId", DbType="Int")]
		public System.Nullable<int> profileId
		{
			get
			{
				return this._profileId;
			}
			set
			{
				if ((this._profileId != value))
				{
					if (this._profile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnprofileIdChanging(value);
					this.SendPropertyChanging();
					this._profileId = value;
					this.SendPropertyChanged("profileId");
					this.OnprofileIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_imagePath", DbType="VarChar(300)")]
		public string imagePath
		{
			get
			{
				return this._imagePath;
			}
			set
			{
				if ((this._imagePath != value))
				{
					this.OnimagePathChanging(value);
					this.SendPropertyChanging();
					this._imagePath = value;
					this.SendPropertyChanged("imagePath");
					this.OnimagePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_MaterialProduct", Storage="_MaterialProducts", ThisKey="productId", OtherKey="productId")]
		public EntitySet<MaterialProduct> MaterialProducts
		{
			get
			{
				return this._MaterialProducts;
			}
			set
			{
				this._MaterialProducts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Production", Storage="_Productions", ThisKey="productId", OtherKey="productId")]
		public EntitySet<Production> Productions
		{
			get
			{
				return this._Productions;
			}
			set
			{
				this._Productions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="profile_Product", Storage="_profile", ThisKey="profileId", OtherKey="profileId", IsForeignKey=true)]
		public profile profile
		{
			get
			{
				return this._profile.Entity;
			}
			set
			{
				profile previousValue = this._profile.Entity;
				if (((previousValue != value) 
							|| (this._profile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._profile.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._profile.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._profileId = value.profileId;
					}
					else
					{
						this._profileId = default(Nullable<int>);
					}
					this.SendPropertyChanged("profile");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Product", Storage="_Project", ThisKey="projectId", OtherKey="projectId", IsForeignKey=true)]
		public Project Project
		{
			get
			{
				return this._Project.Entity;
			}
			set
			{
				Project previousValue = this._Project.Entity;
				if (((previousValue != value) 
							|| (this._Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._Project.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._projectId = value.projectId;
					}
					else
					{
						this._projectId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Covers_Product", Storage="_Covers", ThisKey="coverId", OtherKey="coverId", IsForeignKey=true)]
		public Covers Covers
		{
			get
			{
				return this._Covers.Entity;
			}
			set
			{
				Covers previousValue = this._Covers.Entity;
				if (((previousValue != value) 
							|| (this._Covers.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Covers.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._Covers.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._coverId = value.coverId;
					}
					else
					{
						this._coverId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Covers");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Types_Product", Storage="_Types", ThisKey="typeId", OtherKey="typeId", IsForeignKey=true)]
		public Types Types
		{
			get
			{
				return this._Types.Entity;
			}
			set
			{
				Types previousValue = this._Types.Entity;
				if (((previousValue != value) 
							|| (this._Types.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Types.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._Types.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._typeId = value.typeId;
					}
					else
					{
						this._typeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Types");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MaterialProducts(MaterialProduct entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_MaterialProducts(MaterialProduct entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_Productions(Production entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_Productions(Production entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.profile")]
	public partial class profile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _profileId;
		
		private string _name;
		
		private string _comment;
		
		private System.Nullable<bool> _active;
		
		private System.Nullable<short> _seam1_id;
		
		private System.Nullable<short> _seam2_id;
		
		private System.Nullable<short> _seam3_id;
		
		private System.Nullable<short> _seam4_id;
		
		private System.Nullable<short> _seam5_id;
		
		private System.Nullable<short> _seam6_id;
		
		private System.Nullable<short> _seam7_id;
		
		private System.Nullable<short> _seam8_id;
		
		private System.Nullable<short> _seam9_id;
		
		private System.Nullable<short> _seam10_id;
		
		private System.Nullable<short> _seam11_id;
		
		private System.Nullable<short> _seam12_id;
		
		private System.Nullable<short> _seam13_id;
		
		private System.Nullable<short> _seam14_id;
		
		private System.Nullable<short> _seam15_id;
		
		private System.Nullable<short> _seam16_id;
		
		private EntitySet<Product> _Products;
		
		private EntityRef<seamTemplate> _seamTemplate;
		
		private EntityRef<seamTemplate> _seamTemplate1;
		
		private EntityRef<seamTemplate> _seamTemplate2;
		
		private EntityRef<seamTemplate> _seamTemplate3;
		
		private EntityRef<seamTemplate> _seamTemplate4;
		
		private EntityRef<seamTemplate> _seamTemplate5;
		
		private EntityRef<seamTemplate> _seamTemplate6;
		
		private EntityRef<seamTemplate> _seamTemplate7;
		
		private EntityRef<seamTemplate> _seamTemplate8;
		
		private EntityRef<seamTemplate> _seamTemplate9;
		
		private EntityRef<seamTemplate> _seamTemplate10;
		
		private EntityRef<seamTemplate> _seamTemplate11;
		
		private EntityRef<seamTemplate> _seamTemplate12;
		
		private EntityRef<seamTemplate> _seamTemplate13;
		
		private EntityRef<seamTemplate> _seamTemplate14;
		
		private EntityRef<seamTemplate> _seamTemplate15;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnprofileIdChanging(int value);
    partial void OnprofileIdChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OncommentChanging(string value);
    partial void OncommentChanged();
    partial void OnactiveChanging(System.Nullable<bool> value);
    partial void OnactiveChanged();
    partial void Onseam1_idChanging(System.Nullable<short> value);
    partial void Onseam1_idChanged();
    partial void Onseam2_idChanging(System.Nullable<short> value);
    partial void Onseam2_idChanged();
    partial void Onseam3_idChanging(System.Nullable<short> value);
    partial void Onseam3_idChanged();
    partial void Onseam4_idChanging(System.Nullable<short> value);
    partial void Onseam4_idChanged();
    partial void Onseam5_idChanging(System.Nullable<short> value);
    partial void Onseam5_idChanged();
    partial void Onseam6_idChanging(System.Nullable<short> value);
    partial void Onseam6_idChanged();
    partial void Onseam7_idChanging(System.Nullable<short> value);
    partial void Onseam7_idChanged();
    partial void Onseam8_idChanging(System.Nullable<short> value);
    partial void Onseam8_idChanged();
    partial void Onseam9_idChanging(System.Nullable<short> value);
    partial void Onseam9_idChanged();
    partial void Onseam10_idChanging(System.Nullable<short> value);
    partial void Onseam10_idChanged();
    partial void Onseam11_idChanging(System.Nullable<short> value);
    partial void Onseam11_idChanged();
    partial void Onseam12_idChanging(System.Nullable<short> value);
    partial void Onseam12_idChanged();
    partial void Onseam13_idChanging(System.Nullable<short> value);
    partial void Onseam13_idChanged();
    partial void Onseam14_idChanging(System.Nullable<short> value);
    partial void Onseam14_idChanged();
    partial void Onseam15_idChanging(System.Nullable<short> value);
    partial void Onseam15_idChanged();
    partial void Onseam16_idChanging(System.Nullable<short> value);
    partial void Onseam16_idChanged();
    #endregion
		
		public profile()
		{
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			this._seamTemplate = default(EntityRef<seamTemplate>);
			this._seamTemplate1 = default(EntityRef<seamTemplate>);
			this._seamTemplate2 = default(EntityRef<seamTemplate>);
			this._seamTemplate3 = default(EntityRef<seamTemplate>);
			this._seamTemplate4 = default(EntityRef<seamTemplate>);
			this._seamTemplate5 = default(EntityRef<seamTemplate>);
			this._seamTemplate6 = default(EntityRef<seamTemplate>);
			this._seamTemplate7 = default(EntityRef<seamTemplate>);
			this._seamTemplate8 = default(EntityRef<seamTemplate>);
			this._seamTemplate9 = default(EntityRef<seamTemplate>);
			this._seamTemplate10 = default(EntityRef<seamTemplate>);
			this._seamTemplate11 = default(EntityRef<seamTemplate>);
			this._seamTemplate12 = default(EntityRef<seamTemplate>);
			this._seamTemplate13 = default(EntityRef<seamTemplate>);
			this._seamTemplate14 = default(EntityRef<seamTemplate>);
			this._seamTemplate15 = default(EntityRef<seamTemplate>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_profileId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int profileId
		{
			get
			{
				return this._profileId;
			}
			set
			{
				if ((this._profileId != value))
				{
					this.OnprofileIdChanging(value);
					this.SendPropertyChanging();
					this._profileId = value;
					this.SendPropertyChanged("profileId");
					this.OnprofileIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comment", DbType="VarChar(50)")]
		public string comment
		{
			get
			{
				return this._comment;
			}
			set
			{
				if ((this._comment != value))
				{
					this.OncommentChanging(value);
					this.SendPropertyChanging();
					this._comment = value;
					this.SendPropertyChanged("comment");
					this.OncommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit")]
		public System.Nullable<bool> active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_seam1_id", DbType="SmallInt")]
		public System.Nullable<short> seam1_id
		{
			get
			{
				return this._seam1_id;
			}
			set
			{
				if ((this._seam1_id != value))
				{
					if (this._seamTemplate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onseam1_idChanging(value);
					this.SendPropertyChanging();
					this._seam1_id = value;
					this.SendPropertyChanged("seam1_id");
					this.Onseam1_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_seam2_id", DbType="SmallInt")]
		public System.Nullable<short> seam2_id
		{
			get
			{
				return this._seam2_id;
			}
			set
			{
				if ((this._seam2_id != value))
				{
					if (this._seamTemplate8.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onseam2_idChanging(value);
					this.SendPropertyChanging();
					this._seam2_id = value;
					this.SendPropertyChanged("seam2_id");
					this.Onseam2_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_seam3_id", DbType="SmallInt")]
		public System.Nullable<short> seam3_id
		{
			get
			{
				return this._seam3_id;
			}
			set
			{
				if ((this._seam3_id != value))
				{
					if (this._seamTemplate9.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onseam3_idChanging(value);
					this.SendPropertyChanging();
					this._seam3_id = value;
					this.SendPropertyChanged("seam3_id");
					this.Onseam3_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_seam4_id", DbType="SmallInt")]
		public System.Nullable<short> seam4_id
		{
			get
			{
				return this._seam4_id;
			}
			set
			{
				if ((this._seam4_id != value))
				{
					if (this._seamTemplate10.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onseam4_idChanging(value);
					this.SendPropertyChanging();
					this._seam4_id = value;
					this.SendPropertyChanged("seam4_id");
					this.Onseam4_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_seam5_id", DbType="SmallInt")]
		public System.Nullable<short> seam5_id
		{
			get
			{
				return this._seam5_id;
			}
			set
			{
				if ((this._seam5_id != value))
				{
					if (this._seamTemplate11.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onseam5_idChanging(value);
					this.SendPropertyChanging();
					this._seam5_id = value;
					this.SendPropertyChanged("seam5_id");
					this.Onseam5_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_seam6_id", DbType="SmallInt")]
		public System.Nullable<short> seam6_id
		{
			get
			{
				return this._seam6_id;
			}
			set
			{
				if ((this._seam6_id != value))
				{
					if ((this._seamTemplate3.HasLoadedOrAssignedValue || this._seamTemplate12.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onseam6_idChanging(value);
					this.SendPropertyChanging();
					this._seam6_id = value;
					this.SendPropertyChanged("seam6_id");
					this.Onseam6_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_seam7_id", DbType="SmallInt")]
		public System.Nullable<short> seam7_id
		{
			get
			{
				return this._seam7_id;
			}
			set
			{
				if ((this._seam7_id != value))
				{
					if ((this._seamTemplate4.HasLoadedOrAssignedValue || this._seamTemplate13.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onseam7_idChanging(value);
					this.SendPropertyChanging();
					this._seam7_id = value;
					this.SendPropertyChanged("seam7_id");
					this.Onseam7_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_seam8_id", DbType="SmallInt")]
		public System.Nullable<short> seam8_id
		{
			get
			{
				return this._seam8_id;
			}
			set
			{
				if ((this._seam8_id != value))
				{
					if ((this._seamTemplate5.HasLoadedOrAssignedValue || this._seamTemplate14.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onseam8_idChanging(value);
					this.SendPropertyChanging();
					this._seam8_id = value;
					this.SendPropertyChanged("seam8_id");
					this.Onseam8_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_seam9_id", DbType="SmallInt")]
		public System.Nullable<short> seam9_id
		{
			get
			{
				return this._seam9_id;
			}
			set
			{
				if ((this._seam9_id != value))
				{
					if ((this._seamTemplate6.HasLoadedOrAssignedValue || this._seamTemplate15.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onseam9_idChanging(value);
					this.SendPropertyChanging();
					this._seam9_id = value;
					this.SendPropertyChanged("seam9_id");
					this.Onseam9_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_seam10_id", DbType="SmallInt")]
		public System.Nullable<short> seam10_id
		{
			get
			{
				return this._seam10_id;
			}
			set
			{
				if ((this._seam10_id != value))
				{
					if ((this._seamTemplate1.HasLoadedOrAssignedValue || this._seamTemplate7.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onseam10_idChanging(value);
					this.SendPropertyChanging();
					this._seam10_id = value;
					this.SendPropertyChanged("seam10_id");
					this.Onseam10_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_seam11_id", DbType="SmallInt")]
		public System.Nullable<short> seam11_id
		{
			get
			{
				return this._seam11_id;
			}
			set
			{
				if ((this._seam11_id != value))
				{
					if (this._seamTemplate2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onseam11_idChanging(value);
					this.SendPropertyChanging();
					this._seam11_id = value;
					this.SendPropertyChanged("seam11_id");
					this.Onseam11_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_seam12_id", DbType="SmallInt")]
		public System.Nullable<short> seam12_id
		{
			get
			{
				return this._seam12_id;
			}
			set
			{
				if ((this._seam12_id != value))
				{
					this.Onseam12_idChanging(value);
					this.SendPropertyChanging();
					this._seam12_id = value;
					this.SendPropertyChanged("seam12_id");
					this.Onseam12_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_seam13_id", DbType="SmallInt")]
		public System.Nullable<short> seam13_id
		{
			get
			{
				return this._seam13_id;
			}
			set
			{
				if ((this._seam13_id != value))
				{
					this.Onseam13_idChanging(value);
					this.SendPropertyChanging();
					this._seam13_id = value;
					this.SendPropertyChanged("seam13_id");
					this.Onseam13_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_seam14_id", DbType="SmallInt")]
		public System.Nullable<short> seam14_id
		{
			get
			{
				return this._seam14_id;
			}
			set
			{
				if ((this._seam14_id != value))
				{
					this.Onseam14_idChanging(value);
					this.SendPropertyChanging();
					this._seam14_id = value;
					this.SendPropertyChanged("seam14_id");
					this.Onseam14_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_seam15_id", DbType="SmallInt")]
		public System.Nullable<short> seam15_id
		{
			get
			{
				return this._seam15_id;
			}
			set
			{
				if ((this._seam15_id != value))
				{
					this.Onseam15_idChanging(value);
					this.SendPropertyChanging();
					this._seam15_id = value;
					this.SendPropertyChanged("seam15_id");
					this.Onseam15_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_seam16_id", DbType="SmallInt")]
		public System.Nullable<short> seam16_id
		{
			get
			{
				return this._seam16_id;
			}
			set
			{
				if ((this._seam16_id != value))
				{
					this.Onseam16_idChanging(value);
					this.SendPropertyChanging();
					this._seam16_id = value;
					this.SendPropertyChanged("seam16_id");
					this.Onseam16_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="profile_Product", Storage="_Products", ThisKey="profileId", OtherKey="profileId")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="seamTemplate_profile", Storage="_seamTemplate", ThisKey="seam1_id", OtherKey="Id", IsForeignKey=true)]
		public seamTemplate seamTemplate
		{
			get
			{
				return this._seamTemplate.Entity;
			}
			set
			{
				seamTemplate previousValue = this._seamTemplate.Entity;
				if (((previousValue != value) 
							|| (this._seamTemplate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._seamTemplate.Entity = null;
						previousValue.profiles.Remove(this);
					}
					this._seamTemplate.Entity = value;
					if ((value != null))
					{
						value.profiles.Add(this);
						this._seam1_id = value.Id;
					}
					else
					{
						this._seam1_id = default(Nullable<short>);
					}
					this.SendPropertyChanged("seamTemplate");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="seamTemplate_profile1", Storage="_seamTemplate1", ThisKey="seam10_id", OtherKey="Id", IsForeignKey=true)]
		public seamTemplate seamTemplate1
		{
			get
			{
				return this._seamTemplate1.Entity;
			}
			set
			{
				seamTemplate previousValue = this._seamTemplate1.Entity;
				if (((previousValue != value) 
							|| (this._seamTemplate1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._seamTemplate1.Entity = null;
						previousValue.profiles1.Remove(this);
					}
					this._seamTemplate1.Entity = value;
					if ((value != null))
					{
						value.profiles1.Add(this);
						this._seam10_id = value.Id;
					}
					else
					{
						this._seam10_id = default(Nullable<short>);
					}
					this.SendPropertyChanged("seamTemplate1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="seamTemplate_profile2", Storage="_seamTemplate2", ThisKey="seam11_id", OtherKey="Id", IsForeignKey=true)]
		public seamTemplate seamTemplate2
		{
			get
			{
				return this._seamTemplate2.Entity;
			}
			set
			{
				seamTemplate previousValue = this._seamTemplate2.Entity;
				if (((previousValue != value) 
							|| (this._seamTemplate2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._seamTemplate2.Entity = null;
						previousValue.profiles2.Remove(this);
					}
					this._seamTemplate2.Entity = value;
					if ((value != null))
					{
						value.profiles2.Add(this);
						this._seam11_id = value.Id;
					}
					else
					{
						this._seam11_id = default(Nullable<short>);
					}
					this.SendPropertyChanged("seamTemplate2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="seamTemplate_profile3", Storage="_seamTemplate3", ThisKey="seam6_id", OtherKey="Id", IsForeignKey=true)]
		public seamTemplate seamTemplate3
		{
			get
			{
				return this._seamTemplate3.Entity;
			}
			set
			{
				seamTemplate previousValue = this._seamTemplate3.Entity;
				if (((previousValue != value) 
							|| (this._seamTemplate3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._seamTemplate3.Entity = null;
						previousValue.profiles3.Remove(this);
					}
					this._seamTemplate3.Entity = value;
					if ((value != null))
					{
						value.profiles3.Add(this);
						this._seam6_id = value.Id;
					}
					else
					{
						this._seam6_id = default(Nullable<short>);
					}
					this.SendPropertyChanged("seamTemplate3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="seamTemplate_profile4", Storage="_seamTemplate4", ThisKey="seam7_id", OtherKey="Id", IsForeignKey=true)]
		public seamTemplate seamTemplate4
		{
			get
			{
				return this._seamTemplate4.Entity;
			}
			set
			{
				seamTemplate previousValue = this._seamTemplate4.Entity;
				if (((previousValue != value) 
							|| (this._seamTemplate4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._seamTemplate4.Entity = null;
						previousValue.profiles4.Remove(this);
					}
					this._seamTemplate4.Entity = value;
					if ((value != null))
					{
						value.profiles4.Add(this);
						this._seam7_id = value.Id;
					}
					else
					{
						this._seam7_id = default(Nullable<short>);
					}
					this.SendPropertyChanged("seamTemplate4");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="seamTemplate_profile5", Storage="_seamTemplate5", ThisKey="seam8_id", OtherKey="Id", IsForeignKey=true)]
		public seamTemplate seamTemplate5
		{
			get
			{
				return this._seamTemplate5.Entity;
			}
			set
			{
				seamTemplate previousValue = this._seamTemplate5.Entity;
				if (((previousValue != value) 
							|| (this._seamTemplate5.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._seamTemplate5.Entity = null;
						previousValue.profiles5.Remove(this);
					}
					this._seamTemplate5.Entity = value;
					if ((value != null))
					{
						value.profiles5.Add(this);
						this._seam8_id = value.Id;
					}
					else
					{
						this._seam8_id = default(Nullable<short>);
					}
					this.SendPropertyChanged("seamTemplate5");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="seamTemplate_profile6", Storage="_seamTemplate6", ThisKey="seam9_id", OtherKey="Id", IsForeignKey=true)]
		public seamTemplate seamTemplate6
		{
			get
			{
				return this._seamTemplate6.Entity;
			}
			set
			{
				seamTemplate previousValue = this._seamTemplate6.Entity;
				if (((previousValue != value) 
							|| (this._seamTemplate6.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._seamTemplate6.Entity = null;
						previousValue.profiles6.Remove(this);
					}
					this._seamTemplate6.Entity = value;
					if ((value != null))
					{
						value.profiles6.Add(this);
						this._seam9_id = value.Id;
					}
					else
					{
						this._seam9_id = default(Nullable<short>);
					}
					this.SendPropertyChanged("seamTemplate6");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="seamTemplate_profile7", Storage="_seamTemplate7", ThisKey="seam10_id", OtherKey="Id", IsForeignKey=true)]
		public seamTemplate seamTemplate7
		{
			get
			{
				return this._seamTemplate7.Entity;
			}
			set
			{
				seamTemplate previousValue = this._seamTemplate7.Entity;
				if (((previousValue != value) 
							|| (this._seamTemplate7.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._seamTemplate7.Entity = null;
						previousValue.profiles7.Remove(this);
					}
					this._seamTemplate7.Entity = value;
					if ((value != null))
					{
						value.profiles7.Add(this);
						this._seam10_id = value.Id;
					}
					else
					{
						this._seam10_id = default(Nullable<short>);
					}
					this.SendPropertyChanged("seamTemplate7");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="seamTemplate_profile8", Storage="_seamTemplate8", ThisKey="seam2_id", OtherKey="Id", IsForeignKey=true)]
		public seamTemplate seamTemplate8
		{
			get
			{
				return this._seamTemplate8.Entity;
			}
			set
			{
				seamTemplate previousValue = this._seamTemplate8.Entity;
				if (((previousValue != value) 
							|| (this._seamTemplate8.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._seamTemplate8.Entity = null;
						previousValue.profiles8.Remove(this);
					}
					this._seamTemplate8.Entity = value;
					if ((value != null))
					{
						value.profiles8.Add(this);
						this._seam2_id = value.Id;
					}
					else
					{
						this._seam2_id = default(Nullable<short>);
					}
					this.SendPropertyChanged("seamTemplate8");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="seamTemplate_profile9", Storage="_seamTemplate9", ThisKey="seam3_id", OtherKey="Id", IsForeignKey=true)]
		public seamTemplate seamTemplate9
		{
			get
			{
				return this._seamTemplate9.Entity;
			}
			set
			{
				seamTemplate previousValue = this._seamTemplate9.Entity;
				if (((previousValue != value) 
							|| (this._seamTemplate9.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._seamTemplate9.Entity = null;
						previousValue.profiles9.Remove(this);
					}
					this._seamTemplate9.Entity = value;
					if ((value != null))
					{
						value.profiles9.Add(this);
						this._seam3_id = value.Id;
					}
					else
					{
						this._seam3_id = default(Nullable<short>);
					}
					this.SendPropertyChanged("seamTemplate9");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="seamTemplate_profile10", Storage="_seamTemplate10", ThisKey="seam4_id", OtherKey="Id", IsForeignKey=true)]
		public seamTemplate seamTemplate10
		{
			get
			{
				return this._seamTemplate10.Entity;
			}
			set
			{
				seamTemplate previousValue = this._seamTemplate10.Entity;
				if (((previousValue != value) 
							|| (this._seamTemplate10.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._seamTemplate10.Entity = null;
						previousValue.profiles10.Remove(this);
					}
					this._seamTemplate10.Entity = value;
					if ((value != null))
					{
						value.profiles10.Add(this);
						this._seam4_id = value.Id;
					}
					else
					{
						this._seam4_id = default(Nullable<short>);
					}
					this.SendPropertyChanged("seamTemplate10");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="seamTemplate_profile11", Storage="_seamTemplate11", ThisKey="seam5_id", OtherKey="Id", IsForeignKey=true)]
		public seamTemplate seamTemplate11
		{
			get
			{
				return this._seamTemplate11.Entity;
			}
			set
			{
				seamTemplate previousValue = this._seamTemplate11.Entity;
				if (((previousValue != value) 
							|| (this._seamTemplate11.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._seamTemplate11.Entity = null;
						previousValue.profiles11.Remove(this);
					}
					this._seamTemplate11.Entity = value;
					if ((value != null))
					{
						value.profiles11.Add(this);
						this._seam5_id = value.Id;
					}
					else
					{
						this._seam5_id = default(Nullable<short>);
					}
					this.SendPropertyChanged("seamTemplate11");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="seamTemplate_profile12", Storage="_seamTemplate12", ThisKey="seam6_id", OtherKey="Id", IsForeignKey=true)]
		public seamTemplate seamTemplate12
		{
			get
			{
				return this._seamTemplate12.Entity;
			}
			set
			{
				seamTemplate previousValue = this._seamTemplate12.Entity;
				if (((previousValue != value) 
							|| (this._seamTemplate12.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._seamTemplate12.Entity = null;
						previousValue.profiles12.Remove(this);
					}
					this._seamTemplate12.Entity = value;
					if ((value != null))
					{
						value.profiles12.Add(this);
						this._seam6_id = value.Id;
					}
					else
					{
						this._seam6_id = default(Nullable<short>);
					}
					this.SendPropertyChanged("seamTemplate12");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="seamTemplate_profile13", Storage="_seamTemplate13", ThisKey="seam7_id", OtherKey="Id", IsForeignKey=true)]
		public seamTemplate seamTemplate13
		{
			get
			{
				return this._seamTemplate13.Entity;
			}
			set
			{
				seamTemplate previousValue = this._seamTemplate13.Entity;
				if (((previousValue != value) 
							|| (this._seamTemplate13.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._seamTemplate13.Entity = null;
						previousValue.profiles13.Remove(this);
					}
					this._seamTemplate13.Entity = value;
					if ((value != null))
					{
						value.profiles13.Add(this);
						this._seam7_id = value.Id;
					}
					else
					{
						this._seam7_id = default(Nullable<short>);
					}
					this.SendPropertyChanged("seamTemplate13");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="seamTemplate_profile14", Storage="_seamTemplate14", ThisKey="seam8_id", OtherKey="Id", IsForeignKey=true)]
		public seamTemplate seamTemplate14
		{
			get
			{
				return this._seamTemplate14.Entity;
			}
			set
			{
				seamTemplate previousValue = this._seamTemplate14.Entity;
				if (((previousValue != value) 
							|| (this._seamTemplate14.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._seamTemplate14.Entity = null;
						previousValue.profiles14.Remove(this);
					}
					this._seamTemplate14.Entity = value;
					if ((value != null))
					{
						value.profiles14.Add(this);
						this._seam8_id = value.Id;
					}
					else
					{
						this._seam8_id = default(Nullable<short>);
					}
					this.SendPropertyChanged("seamTemplate14");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="seamTemplate_profile15", Storage="_seamTemplate15", ThisKey="seam9_id", OtherKey="Id", IsForeignKey=true)]
		public seamTemplate seamTemplate15
		{
			get
			{
				return this._seamTemplate15.Entity;
			}
			set
			{
				seamTemplate previousValue = this._seamTemplate15.Entity;
				if (((previousValue != value) 
							|| (this._seamTemplate15.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._seamTemplate15.Entity = null;
						previousValue.profiles15.Remove(this);
					}
					this._seamTemplate15.Entity = value;
					if ((value != null))
					{
						value.profiles15.Add(this);
						this._seam9_id = value.Id;
					}
					else
					{
						this._seam9_id = default(Nullable<short>);
					}
					this.SendPropertyChanged("seamTemplate15");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.profile = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.profile = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Project")]
	public partial class Project : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _projectId;
		
		private string _projectName;
		
		private string _comment;
		
		private bool _active;
		
		private string _machineId;
		
		private string _plantId;
		
		private string _plantInfo;
		
		private string _customerId;
		
		private string _customerInfo;
		
		private short _productMode;
		
		private short _counterReset;
		
		private bool _useLotNumber;
		
		private string _prodCodesTable;
		
		private string _imagePath;
		
		private EntitySet<Material_IOPosition> _Material_IOPositions;
		
		private EntitySet<Option> _Options;
		
		private EntitySet<Production> _Productions;
		
		private EntitySet<Product> _Products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnprojectIdChanging(int value);
    partial void OnprojectIdChanged();
    partial void OnprojectNameChanging(string value);
    partial void OnprojectNameChanged();
    partial void OncommentChanging(string value);
    partial void OncommentChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    partial void OnmachineIdChanging(string value);
    partial void OnmachineIdChanged();
    partial void OnplantIdChanging(string value);
    partial void OnplantIdChanged();
    partial void OnplantInfoChanging(string value);
    partial void OnplantInfoChanged();
    partial void OncustomerIdChanging(string value);
    partial void OncustomerIdChanged();
    partial void OncustomerInfoChanging(string value);
    partial void OncustomerInfoChanged();
    partial void OnproductModeChanging(short value);
    partial void OnproductModeChanged();
    partial void OncounterResetChanging(short value);
    partial void OncounterResetChanged();
    partial void OnuseLotNumberChanging(bool value);
    partial void OnuseLotNumberChanged();
    partial void OnprodCodesTableChanging(string value);
    partial void OnprodCodesTableChanged();
    partial void OnimagePathChanging(string value);
    partial void OnimagePathChanged();
    #endregion
		
		public Project()
		{
			this._Material_IOPositions = new EntitySet<Material_IOPosition>(new Action<Material_IOPosition>(this.attach_Material_IOPositions), new Action<Material_IOPosition>(this.detach_Material_IOPositions));
			this._Options = new EntitySet<Option>(new Action<Option>(this.attach_Options), new Action<Option>(this.detach_Options));
			this._Productions = new EntitySet<Production>(new Action<Production>(this.attach_Productions), new Action<Production>(this.detach_Productions));
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_projectId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int projectId
		{
			get
			{
				return this._projectId;
			}
			set
			{
				if ((this._projectId != value))
				{
					this.OnprojectIdChanging(value);
					this.SendPropertyChanging();
					this._projectId = value;
					this.SendPropertyChanged("projectId");
					this.OnprojectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_projectName", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string projectName
		{
			get
			{
				return this._projectName;
			}
			set
			{
				if ((this._projectName != value))
				{
					this.OnprojectNameChanging(value);
					this.SendPropertyChanging();
					this._projectName = value;
					this.SendPropertyChanged("projectName");
					this.OnprojectNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comment", DbType="VarChar(50)")]
		public string comment
		{
			get
			{
				return this._comment;
			}
			set
			{
				if ((this._comment != value))
				{
					this.OncommentChanging(value);
					this.SendPropertyChanging();
					this._comment = value;
					this.SendPropertyChanged("comment");
					this.OncommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_machineId", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string machineId
		{
			get
			{
				return this._machineId;
			}
			set
			{
				if ((this._machineId != value))
				{
					this.OnmachineIdChanging(value);
					this.SendPropertyChanging();
					this._machineId = value;
					this.SendPropertyChanged("machineId");
					this.OnmachineIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_plantId", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string plantId
		{
			get
			{
				return this._plantId;
			}
			set
			{
				if ((this._plantId != value))
				{
					this.OnplantIdChanging(value);
					this.SendPropertyChanging();
					this._plantId = value;
					this.SendPropertyChanged("plantId");
					this.OnplantIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_plantInfo", DbType="VarChar(30)")]
		public string plantInfo
		{
			get
			{
				return this._plantInfo;
			}
			set
			{
				if ((this._plantInfo != value))
				{
					this.OnplantInfoChanging(value);
					this.SendPropertyChanging();
					this._plantInfo = value;
					this.SendPropertyChanged("plantInfo");
					this.OnplantInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerId", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string customerId
		{
			get
			{
				return this._customerId;
			}
			set
			{
				if ((this._customerId != value))
				{
					this.OncustomerIdChanging(value);
					this.SendPropertyChanging();
					this._customerId = value;
					this.SendPropertyChanged("customerId");
					this.OncustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerInfo", DbType="VarChar(30)")]
		public string customerInfo
		{
			get
			{
				return this._customerInfo;
			}
			set
			{
				if ((this._customerInfo != value))
				{
					this.OncustomerInfoChanging(value);
					this.SendPropertyChanging();
					this._customerInfo = value;
					this.SendPropertyChanged("customerInfo");
					this.OncustomerInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productMode", DbType="SmallInt NOT NULL")]
		public short productMode
		{
			get
			{
				return this._productMode;
			}
			set
			{
				if ((this._productMode != value))
				{
					this.OnproductModeChanging(value);
					this.SendPropertyChanging();
					this._productMode = value;
					this.SendPropertyChanged("productMode");
					this.OnproductModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_counterReset", DbType="SmallInt NOT NULL")]
		public short counterReset
		{
			get
			{
				return this._counterReset;
			}
			set
			{
				if ((this._counterReset != value))
				{
					this.OncounterResetChanging(value);
					this.SendPropertyChanging();
					this._counterReset = value;
					this.SendPropertyChanged("counterReset");
					this.OncounterResetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_useLotNumber", DbType="Bit NOT NULL")]
		public bool useLotNumber
		{
			get
			{
				return this._useLotNumber;
			}
			set
			{
				if ((this._useLotNumber != value))
				{
					this.OnuseLotNumberChanging(value);
					this.SendPropertyChanging();
					this._useLotNumber = value;
					this.SendPropertyChanged("useLotNumber");
					this.OnuseLotNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prodCodesTable", DbType="VarChar(10)")]
		public string prodCodesTable
		{
			get
			{
				return this._prodCodesTable;
			}
			set
			{
				if ((this._prodCodesTable != value))
				{
					this.OnprodCodesTableChanging(value);
					this.SendPropertyChanging();
					this._prodCodesTable = value;
					this.SendPropertyChanged("prodCodesTable");
					this.OnprodCodesTableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_imagePath", DbType="VarChar(300)")]
		public string imagePath
		{
			get
			{
				return this._imagePath;
			}
			set
			{
				if ((this._imagePath != value))
				{
					this.OnimagePathChanging(value);
					this.SendPropertyChanging();
					this._imagePath = value;
					this.SendPropertyChanged("imagePath");
					this.OnimagePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Material_IOPosition", Storage="_Material_IOPositions", ThisKey="projectId", OtherKey="projectId")]
		public EntitySet<Material_IOPosition> Material_IOPositions
		{
			get
			{
				return this._Material_IOPositions;
			}
			set
			{
				this._Material_IOPositions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Option", Storage="_Options", ThisKey="projectId", OtherKey="projectId")]
		public EntitySet<Option> Options
		{
			get
			{
				return this._Options;
			}
			set
			{
				this._Options.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Production", Storage="_Productions", ThisKey="projectId", OtherKey="projectId")]
		public EntitySet<Production> Productions
		{
			get
			{
				return this._Productions;
			}
			set
			{
				this._Productions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Product", Storage="_Products", ThisKey="projectId", OtherKey="projectId")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Material_IOPositions(Material_IOPosition entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_Material_IOPositions(Material_IOPosition entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
		
		private void attach_Options(Option entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_Options(Option entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
		
		private void attach_Productions(Production entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_Productions(Production entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.seamTemplate")]
	public partial class seamTemplate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _Id;
		
		private string _name;
		
		private string _comment;
		
		private System.Nullable<bool> _active;
		
		private System.Nullable<bool> _printLabelActive;
		
		private string _labelFile;
		
		private System.Nullable<short> _labelPrtPos;
		
		private System.Nullable<short> _minTens;
		
		private System.Nullable<short> _maxTens;
		
		private System.Nullable<short> _blindTens;
		
		private System.Nullable<short> _tensFilter;
		
		private System.Nullable<short> _stitchCount;
		
		private System.Nullable<short> _posTol;
		
		private System.Nullable<short> _negTol;
		
		private System.Nullable<short> _blindArea;
		
		private System.Nullable<short> _seamLen;
		
		private System.Nullable<short> _stitchLen;
		
		private System.Nullable<short> _startBtFw;
		
		private System.Nullable<short> _startBtBw;
		
		private System.Nullable<short> _endBtFw;
		
		private System.Nullable<short> _endBtBw;
		
		private System.Nullable<short> _speed;
		
		private System.Nullable<short> _par;
		
		private System.Nullable<short> _general;
		
		private System.Nullable<short> _functions;
		
		private System.Nullable<short> _monitoring;
		
		private EntitySet<profile> _profiles;
		
		private EntitySet<profile> _profiles1;
		
		private EntitySet<profile> _profiles2;
		
		private EntitySet<profile> _profiles3;
		
		private EntitySet<profile> _profiles4;
		
		private EntitySet<profile> _profiles5;
		
		private EntitySet<profile> _profiles6;
		
		private EntitySet<profile> _profiles7;
		
		private EntitySet<profile> _profiles8;
		
		private EntitySet<profile> _profiles9;
		
		private EntitySet<profile> _profiles10;
		
		private EntitySet<profile> _profiles11;
		
		private EntitySet<profile> _profiles12;
		
		private EntitySet<profile> _profiles13;
		
		private EntitySet<profile> _profiles14;
		
		private EntitySet<profile> _profiles15;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(short value);
    partial void OnIdChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OncommentChanging(string value);
    partial void OncommentChanged();
    partial void OnactiveChanging(System.Nullable<bool> value);
    partial void OnactiveChanged();
    partial void OnprintLabelActiveChanging(System.Nullable<bool> value);
    partial void OnprintLabelActiveChanged();
    partial void OnlabelFileChanging(string value);
    partial void OnlabelFileChanged();
    partial void OnlabelPrtPosChanging(System.Nullable<short> value);
    partial void OnlabelPrtPosChanged();
    partial void OnminTensChanging(System.Nullable<short> value);
    partial void OnminTensChanged();
    partial void OnmaxTensChanging(System.Nullable<short> value);
    partial void OnmaxTensChanged();
    partial void OnblindTensChanging(System.Nullable<short> value);
    partial void OnblindTensChanged();
    partial void OntensFilterChanging(System.Nullable<short> value);
    partial void OntensFilterChanged();
    partial void OnstitchCountChanging(System.Nullable<short> value);
    partial void OnstitchCountChanged();
    partial void OnposTolChanging(System.Nullable<short> value);
    partial void OnposTolChanged();
    partial void OnnegTolChanging(System.Nullable<short> value);
    partial void OnnegTolChanged();
    partial void OnblindAreaChanging(System.Nullable<short> value);
    partial void OnblindAreaChanged();
    partial void OnseamLenChanging(System.Nullable<short> value);
    partial void OnseamLenChanged();
    partial void OnstitchLenChanging(System.Nullable<short> value);
    partial void OnstitchLenChanged();
    partial void OnstartBtFwChanging(System.Nullable<short> value);
    partial void OnstartBtFwChanged();
    partial void OnstartBtBwChanging(System.Nullable<short> value);
    partial void OnstartBtBwChanged();
    partial void OnendBtFwChanging(System.Nullable<short> value);
    partial void OnendBtFwChanged();
    partial void OnendBtBwChanging(System.Nullable<short> value);
    partial void OnendBtBwChanged();
    partial void OnspeedChanging(System.Nullable<short> value);
    partial void OnspeedChanged();
    partial void OnparChanging(System.Nullable<short> value);
    partial void OnparChanged();
    partial void OngeneralChanging(System.Nullable<short> value);
    partial void OngeneralChanged();
    partial void OnfunctionsChanging(System.Nullable<short> value);
    partial void OnfunctionsChanged();
    partial void OnmonitoringChanging(System.Nullable<short> value);
    partial void OnmonitoringChanged();
    #endregion
		
		public seamTemplate()
		{
			this._profiles = new EntitySet<profile>(new Action<profile>(this.attach_profiles), new Action<profile>(this.detach_profiles));
			this._profiles1 = new EntitySet<profile>(new Action<profile>(this.attach_profiles1), new Action<profile>(this.detach_profiles1));
			this._profiles2 = new EntitySet<profile>(new Action<profile>(this.attach_profiles2), new Action<profile>(this.detach_profiles2));
			this._profiles3 = new EntitySet<profile>(new Action<profile>(this.attach_profiles3), new Action<profile>(this.detach_profiles3));
			this._profiles4 = new EntitySet<profile>(new Action<profile>(this.attach_profiles4), new Action<profile>(this.detach_profiles4));
			this._profiles5 = new EntitySet<profile>(new Action<profile>(this.attach_profiles5), new Action<profile>(this.detach_profiles5));
			this._profiles6 = new EntitySet<profile>(new Action<profile>(this.attach_profiles6), new Action<profile>(this.detach_profiles6));
			this._profiles7 = new EntitySet<profile>(new Action<profile>(this.attach_profiles7), new Action<profile>(this.detach_profiles7));
			this._profiles8 = new EntitySet<profile>(new Action<profile>(this.attach_profiles8), new Action<profile>(this.detach_profiles8));
			this._profiles9 = new EntitySet<profile>(new Action<profile>(this.attach_profiles9), new Action<profile>(this.detach_profiles9));
			this._profiles10 = new EntitySet<profile>(new Action<profile>(this.attach_profiles10), new Action<profile>(this.detach_profiles10));
			this._profiles11 = new EntitySet<profile>(new Action<profile>(this.attach_profiles11), new Action<profile>(this.detach_profiles11));
			this._profiles12 = new EntitySet<profile>(new Action<profile>(this.attach_profiles12), new Action<profile>(this.detach_profiles12));
			this._profiles13 = new EntitySet<profile>(new Action<profile>(this.attach_profiles13), new Action<profile>(this.detach_profiles13));
			this._profiles14 = new EntitySet<profile>(new Action<profile>(this.attach_profiles14), new Action<profile>(this.detach_profiles14));
			this._profiles15 = new EntitySet<profile>(new Action<profile>(this.attach_profiles15), new Action<profile>(this.detach_profiles15));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comment", DbType="VarChar(100)")]
		public string comment
		{
			get
			{
				return this._comment;
			}
			set
			{
				if ((this._comment != value))
				{
					this.OncommentChanging(value);
					this.SendPropertyChanging();
					this._comment = value;
					this.SendPropertyChanged("comment");
					this.OncommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit")]
		public System.Nullable<bool> active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_printLabelActive", DbType="Bit")]
		public System.Nullable<bool> printLabelActive
		{
			get
			{
				return this._printLabelActive;
			}
			set
			{
				if ((this._printLabelActive != value))
				{
					this.OnprintLabelActiveChanging(value);
					this.SendPropertyChanging();
					this._printLabelActive = value;
					this.SendPropertyChanged("printLabelActive");
					this.OnprintLabelActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_labelFile", DbType="VarChar(MAX)")]
		public string labelFile
		{
			get
			{
				return this._labelFile;
			}
			set
			{
				if ((this._labelFile != value))
				{
					this.OnlabelFileChanging(value);
					this.SendPropertyChanging();
					this._labelFile = value;
					this.SendPropertyChanged("labelFile");
					this.OnlabelFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_labelPrtPos", DbType="SmallInt")]
		public System.Nullable<short> labelPrtPos
		{
			get
			{
				return this._labelPrtPos;
			}
			set
			{
				if ((this._labelPrtPos != value))
				{
					this.OnlabelPrtPosChanging(value);
					this.SendPropertyChanging();
					this._labelPrtPos = value;
					this.SendPropertyChanged("labelPrtPos");
					this.OnlabelPrtPosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_minTens", DbType="SmallInt")]
		public System.Nullable<short> minTens
		{
			get
			{
				return this._minTens;
			}
			set
			{
				if ((this._minTens != value))
				{
					this.OnminTensChanging(value);
					this.SendPropertyChanging();
					this._minTens = value;
					this.SendPropertyChanged("minTens");
					this.OnminTensChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maxTens", DbType="SmallInt")]
		public System.Nullable<short> maxTens
		{
			get
			{
				return this._maxTens;
			}
			set
			{
				if ((this._maxTens != value))
				{
					this.OnmaxTensChanging(value);
					this.SendPropertyChanging();
					this._maxTens = value;
					this.SendPropertyChanged("maxTens");
					this.OnmaxTensChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_blindTens", DbType="SmallInt")]
		public System.Nullable<short> blindTens
		{
			get
			{
				return this._blindTens;
			}
			set
			{
				if ((this._blindTens != value))
				{
					this.OnblindTensChanging(value);
					this.SendPropertyChanging();
					this._blindTens = value;
					this.SendPropertyChanged("blindTens");
					this.OnblindTensChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tensFilter", DbType="SmallInt")]
		public System.Nullable<short> tensFilter
		{
			get
			{
				return this._tensFilter;
			}
			set
			{
				if ((this._tensFilter != value))
				{
					this.OntensFilterChanging(value);
					this.SendPropertyChanging();
					this._tensFilter = value;
					this.SendPropertyChanged("tensFilter");
					this.OntensFilterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stitchCount", DbType="SmallInt")]
		public System.Nullable<short> stitchCount
		{
			get
			{
				return this._stitchCount;
			}
			set
			{
				if ((this._stitchCount != value))
				{
					this.OnstitchCountChanging(value);
					this.SendPropertyChanging();
					this._stitchCount = value;
					this.SendPropertyChanged("stitchCount");
					this.OnstitchCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_posTol", DbType="SmallInt")]
		public System.Nullable<short> posTol
		{
			get
			{
				return this._posTol;
			}
			set
			{
				if ((this._posTol != value))
				{
					this.OnposTolChanging(value);
					this.SendPropertyChanging();
					this._posTol = value;
					this.SendPropertyChanged("posTol");
					this.OnposTolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_negTol", DbType="SmallInt")]
		public System.Nullable<short> negTol
		{
			get
			{
				return this._negTol;
			}
			set
			{
				if ((this._negTol != value))
				{
					this.OnnegTolChanging(value);
					this.SendPropertyChanging();
					this._negTol = value;
					this.SendPropertyChanged("negTol");
					this.OnnegTolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_blindArea", DbType="SmallInt")]
		public System.Nullable<short> blindArea
		{
			get
			{
				return this._blindArea;
			}
			set
			{
				if ((this._blindArea != value))
				{
					this.OnblindAreaChanging(value);
					this.SendPropertyChanging();
					this._blindArea = value;
					this.SendPropertyChanged("blindArea");
					this.OnblindAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_seamLen", DbType="SmallInt")]
		public System.Nullable<short> seamLen
		{
			get
			{
				return this._seamLen;
			}
			set
			{
				if ((this._seamLen != value))
				{
					this.OnseamLenChanging(value);
					this.SendPropertyChanging();
					this._seamLen = value;
					this.SendPropertyChanged("seamLen");
					this.OnseamLenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stitchLen", DbType="SmallInt")]
		public System.Nullable<short> stitchLen
		{
			get
			{
				return this._stitchLen;
			}
			set
			{
				if ((this._stitchLen != value))
				{
					this.OnstitchLenChanging(value);
					this.SendPropertyChanging();
					this._stitchLen = value;
					this.SendPropertyChanged("stitchLen");
					this.OnstitchLenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_startBtFw", DbType="SmallInt")]
		public System.Nullable<short> startBtFw
		{
			get
			{
				return this._startBtFw;
			}
			set
			{
				if ((this._startBtFw != value))
				{
					this.OnstartBtFwChanging(value);
					this.SendPropertyChanging();
					this._startBtFw = value;
					this.SendPropertyChanged("startBtFw");
					this.OnstartBtFwChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_startBtBw", DbType="SmallInt")]
		public System.Nullable<short> startBtBw
		{
			get
			{
				return this._startBtBw;
			}
			set
			{
				if ((this._startBtBw != value))
				{
					this.OnstartBtBwChanging(value);
					this.SendPropertyChanging();
					this._startBtBw = value;
					this.SendPropertyChanged("startBtBw");
					this.OnstartBtBwChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_endBtFw", DbType="SmallInt")]
		public System.Nullable<short> endBtFw
		{
			get
			{
				return this._endBtFw;
			}
			set
			{
				if ((this._endBtFw != value))
				{
					this.OnendBtFwChanging(value);
					this.SendPropertyChanging();
					this._endBtFw = value;
					this.SendPropertyChanged("endBtFw");
					this.OnendBtFwChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_endBtBw", DbType="SmallInt")]
		public System.Nullable<short> endBtBw
		{
			get
			{
				return this._endBtBw;
			}
			set
			{
				if ((this._endBtBw != value))
				{
					this.OnendBtBwChanging(value);
					this.SendPropertyChanging();
					this._endBtBw = value;
					this.SendPropertyChanged("endBtBw");
					this.OnendBtBwChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_speed", DbType="SmallInt")]
		public System.Nullable<short> speed
		{
			get
			{
				return this._speed;
			}
			set
			{
				if ((this._speed != value))
				{
					this.OnspeedChanging(value);
					this.SendPropertyChanging();
					this._speed = value;
					this.SendPropertyChanged("speed");
					this.OnspeedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_par", DbType="SmallInt")]
		public System.Nullable<short> par
		{
			get
			{
				return this._par;
			}
			set
			{
				if ((this._par != value))
				{
					this.OnparChanging(value);
					this.SendPropertyChanging();
					this._par = value;
					this.SendPropertyChanged("par");
					this.OnparChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_general", DbType="SmallInt")]
		public System.Nullable<short> general
		{
			get
			{
				return this._general;
			}
			set
			{
				if ((this._general != value))
				{
					this.OngeneralChanging(value);
					this.SendPropertyChanging();
					this._general = value;
					this.SendPropertyChanged("general");
					this.OngeneralChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_functions", DbType="SmallInt")]
		public System.Nullable<short> functions
		{
			get
			{
				return this._functions;
			}
			set
			{
				if ((this._functions != value))
				{
					this.OnfunctionsChanging(value);
					this.SendPropertyChanging();
					this._functions = value;
					this.SendPropertyChanged("functions");
					this.OnfunctionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_monitoring", DbType="SmallInt")]
		public System.Nullable<short> monitoring
		{
			get
			{
				return this._monitoring;
			}
			set
			{
				if ((this._monitoring != value))
				{
					this.OnmonitoringChanging(value);
					this.SendPropertyChanging();
					this._monitoring = value;
					this.SendPropertyChanged("monitoring");
					this.OnmonitoringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="seamTemplate_profile", Storage="_profiles", ThisKey="Id", OtherKey="seam1_id")]
		public EntitySet<profile> profiles
		{
			get
			{
				return this._profiles;
			}
			set
			{
				this._profiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="seamTemplate_profile1", Storage="_profiles1", ThisKey="Id", OtherKey="seam10_id")]
		public EntitySet<profile> profiles1
		{
			get
			{
				return this._profiles1;
			}
			set
			{
				this._profiles1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="seamTemplate_profile2", Storage="_profiles2", ThisKey="Id", OtherKey="seam11_id")]
		public EntitySet<profile> profiles2
		{
			get
			{
				return this._profiles2;
			}
			set
			{
				this._profiles2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="seamTemplate_profile3", Storage="_profiles3", ThisKey="Id", OtherKey="seam6_id")]
		public EntitySet<profile> profiles3
		{
			get
			{
				return this._profiles3;
			}
			set
			{
				this._profiles3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="seamTemplate_profile4", Storage="_profiles4", ThisKey="Id", OtherKey="seam7_id")]
		public EntitySet<profile> profiles4
		{
			get
			{
				return this._profiles4;
			}
			set
			{
				this._profiles4.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="seamTemplate_profile5", Storage="_profiles5", ThisKey="Id", OtherKey="seam8_id")]
		public EntitySet<profile> profiles5
		{
			get
			{
				return this._profiles5;
			}
			set
			{
				this._profiles5.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="seamTemplate_profile6", Storage="_profiles6", ThisKey="Id", OtherKey="seam9_id")]
		public EntitySet<profile> profiles6
		{
			get
			{
				return this._profiles6;
			}
			set
			{
				this._profiles6.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="seamTemplate_profile7", Storage="_profiles7", ThisKey="Id", OtherKey="seam10_id")]
		public EntitySet<profile> profiles7
		{
			get
			{
				return this._profiles7;
			}
			set
			{
				this._profiles7.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="seamTemplate_profile8", Storage="_profiles8", ThisKey="Id", OtherKey="seam2_id")]
		public EntitySet<profile> profiles8
		{
			get
			{
				return this._profiles8;
			}
			set
			{
				this._profiles8.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="seamTemplate_profile9", Storage="_profiles9", ThisKey="Id", OtherKey="seam3_id")]
		public EntitySet<profile> profiles9
		{
			get
			{
				return this._profiles9;
			}
			set
			{
				this._profiles9.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="seamTemplate_profile10", Storage="_profiles10", ThisKey="Id", OtherKey="seam4_id")]
		public EntitySet<profile> profiles10
		{
			get
			{
				return this._profiles10;
			}
			set
			{
				this._profiles10.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="seamTemplate_profile11", Storage="_profiles11", ThisKey="Id", OtherKey="seam5_id")]
		public EntitySet<profile> profiles11
		{
			get
			{
				return this._profiles11;
			}
			set
			{
				this._profiles11.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="seamTemplate_profile12", Storage="_profiles12", ThisKey="Id", OtherKey="seam6_id")]
		public EntitySet<profile> profiles12
		{
			get
			{
				return this._profiles12;
			}
			set
			{
				this._profiles12.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="seamTemplate_profile13", Storage="_profiles13", ThisKey="Id", OtherKey="seam7_id")]
		public EntitySet<profile> profiles13
		{
			get
			{
				return this._profiles13;
			}
			set
			{
				this._profiles13.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="seamTemplate_profile14", Storage="_profiles14", ThisKey="Id", OtherKey="seam8_id")]
		public EntitySet<profile> profiles14
		{
			get
			{
				return this._profiles14;
			}
			set
			{
				this._profiles14.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="seamTemplate_profile15", Storage="_profiles15", ThisKey="Id", OtherKey="seam9_id")]
		public EntitySet<profile> profiles15
		{
			get
			{
				return this._profiles15;
			}
			set
			{
				this._profiles15.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_profiles(profile entity)
		{
			this.SendPropertyChanging();
			entity.seamTemplate = this;
		}
		
		private void detach_profiles(profile entity)
		{
			this.SendPropertyChanging();
			entity.seamTemplate = null;
		}
		
		private void attach_profiles1(profile entity)
		{
			this.SendPropertyChanging();
			entity.seamTemplate1 = this;
		}
		
		private void detach_profiles1(profile entity)
		{
			this.SendPropertyChanging();
			entity.seamTemplate1 = null;
		}
		
		private void attach_profiles2(profile entity)
		{
			this.SendPropertyChanging();
			entity.seamTemplate2 = this;
		}
		
		private void detach_profiles2(profile entity)
		{
			this.SendPropertyChanging();
			entity.seamTemplate2 = null;
		}
		
		private void attach_profiles3(profile entity)
		{
			this.SendPropertyChanging();
			entity.seamTemplate3 = this;
		}
		
		private void detach_profiles3(profile entity)
		{
			this.SendPropertyChanging();
			entity.seamTemplate3 = null;
		}
		
		private void attach_profiles4(profile entity)
		{
			this.SendPropertyChanging();
			entity.seamTemplate4 = this;
		}
		
		private void detach_profiles4(profile entity)
		{
			this.SendPropertyChanging();
			entity.seamTemplate4 = null;
		}
		
		private void attach_profiles5(profile entity)
		{
			this.SendPropertyChanging();
			entity.seamTemplate5 = this;
		}
		
		private void detach_profiles5(profile entity)
		{
			this.SendPropertyChanging();
			entity.seamTemplate5 = null;
		}
		
		private void attach_profiles6(profile entity)
		{
			this.SendPropertyChanging();
			entity.seamTemplate6 = this;
		}
		
		private void detach_profiles6(profile entity)
		{
			this.SendPropertyChanging();
			entity.seamTemplate6 = null;
		}
		
		private void attach_profiles7(profile entity)
		{
			this.SendPropertyChanging();
			entity.seamTemplate7 = this;
		}
		
		private void detach_profiles7(profile entity)
		{
			this.SendPropertyChanging();
			entity.seamTemplate7 = null;
		}
		
		private void attach_profiles8(profile entity)
		{
			this.SendPropertyChanging();
			entity.seamTemplate8 = this;
		}
		
		private void detach_profiles8(profile entity)
		{
			this.SendPropertyChanging();
			entity.seamTemplate8 = null;
		}
		
		private void attach_profiles9(profile entity)
		{
			this.SendPropertyChanging();
			entity.seamTemplate9 = this;
		}
		
		private void detach_profiles9(profile entity)
		{
			this.SendPropertyChanging();
			entity.seamTemplate9 = null;
		}
		
		private void attach_profiles10(profile entity)
		{
			this.SendPropertyChanging();
			entity.seamTemplate10 = this;
		}
		
		private void detach_profiles10(profile entity)
		{
			this.SendPropertyChanging();
			entity.seamTemplate10 = null;
		}
		
		private void attach_profiles11(profile entity)
		{
			this.SendPropertyChanging();
			entity.seamTemplate11 = this;
		}
		
		private void detach_profiles11(profile entity)
		{
			this.SendPropertyChanging();
			entity.seamTemplate11 = null;
		}
		
		private void attach_profiles12(profile entity)
		{
			this.SendPropertyChanging();
			entity.seamTemplate12 = this;
		}
		
		private void detach_profiles12(profile entity)
		{
			this.SendPropertyChanging();
			entity.seamTemplate12 = null;
		}
		
		private void attach_profiles13(profile entity)
		{
			this.SendPropertyChanging();
			entity.seamTemplate13 = this;
		}
		
		private void detach_profiles13(profile entity)
		{
			this.SendPropertyChanging();
			entity.seamTemplate13 = null;
		}
		
		private void attach_profiles14(profile entity)
		{
			this.SendPropertyChanging();
			entity.seamTemplate14 = this;
		}
		
		private void detach_profiles14(profile entity)
		{
			this.SendPropertyChanging();
			entity.seamTemplate14 = null;
		}
		
		private void attach_profiles15(profile entity)
		{
			this.SendPropertyChanging();
			entity.seamTemplate15 = this;
		}
		
		private void detach_profiles15(profile entity)
		{
			this.SendPropertyChanging();
			entity.seamTemplate15 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Settings")]
	public partial class Setting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _sLanguage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnsLanguageChanging(string value);
    partial void OnsLanguageChanged();
    #endregion
		
		public Setting()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sLanguage", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string sLanguage
		{
			get
			{
				return this._sLanguage;
			}
			set
			{
				if ((this._sLanguage != value))
				{
					this.OnsLanguageChanging(value);
					this.SendPropertyChanging();
					this._sLanguage = value;
					this.SendPropertyChanged("sLanguage");
					this.OnsLanguageChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_UserProfiles")]
	public partial class tbl_UserProfile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Userprofile;
		
		private System.Nullable<bool> _Productions;
		
		private System.Nullable<bool> _MachineConfig;
		
		private System.Nullable<bool> _Products;
		
		private System.Nullable<bool> _Users;
		
		private System.Nullable<bool> _Reset;
		
		private System.Nullable<bool> _Reprint;
		
		private System.Nullable<bool> _Maintenance;
		
		private System.Nullable<bool> _Find;
		
		private System.Nullable<bool> _Desktop;
		
		private System.Nullable<bool> _Materials;
		
		private System.Nullable<bool> _ProductProfile;
		
		private System.Nullable<bool> _LabelEditor;
		
		private System.Nullable<bool> _BobbinMonitor;
		
		private System.Nullable<bool> _BobbinTracer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserprofileChanging(string value);
    partial void OnUserprofileChanged();
    partial void OnProductionsChanging(System.Nullable<bool> value);
    partial void OnProductionsChanged();
    partial void OnMachineConfigChanging(System.Nullable<bool> value);
    partial void OnMachineConfigChanged();
    partial void OnProductsChanging(System.Nullable<bool> value);
    partial void OnProductsChanged();
    partial void OnUsersChanging(System.Nullable<bool> value);
    partial void OnUsersChanged();
    partial void OnResetChanging(System.Nullable<bool> value);
    partial void OnResetChanged();
    partial void OnReprintChanging(System.Nullable<bool> value);
    partial void OnReprintChanged();
    partial void OnMaintenanceChanging(System.Nullable<bool> value);
    partial void OnMaintenanceChanged();
    partial void OnFindChanging(System.Nullable<bool> value);
    partial void OnFindChanged();
    partial void OnDesktopChanging(System.Nullable<bool> value);
    partial void OnDesktopChanged();
    partial void OnMaterialsChanging(System.Nullable<bool> value);
    partial void OnMaterialsChanged();
    partial void OnProductProfileChanging(System.Nullable<bool> value);
    partial void OnProductProfileChanged();
    partial void OnLabelEditorChanging(System.Nullable<bool> value);
    partial void OnLabelEditorChanged();
    partial void OnBobbinMonitorChanging(System.Nullable<bool> value);
    partial void OnBobbinMonitorChanged();
    partial void OnBobbinTracerChanging(System.Nullable<bool> value);
    partial void OnBobbinTracerChanged();
    #endregion
		
		public tbl_UserProfile()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Userprofile", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Userprofile
		{
			get
			{
				return this._Userprofile;
			}
			set
			{
				if ((this._Userprofile != value))
				{
					this.OnUserprofileChanging(value);
					this.SendPropertyChanging();
					this._Userprofile = value;
					this.SendPropertyChanged("Userprofile");
					this.OnUserprofileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Productions", DbType="Bit")]
		public System.Nullable<bool> Productions
		{
			get
			{
				return this._Productions;
			}
			set
			{
				if ((this._Productions != value))
				{
					this.OnProductionsChanging(value);
					this.SendPropertyChanging();
					this._Productions = value;
					this.SendPropertyChanged("Productions");
					this.OnProductionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MachineConfig", DbType="Bit")]
		public System.Nullable<bool> MachineConfig
		{
			get
			{
				return this._MachineConfig;
			}
			set
			{
				if ((this._MachineConfig != value))
				{
					this.OnMachineConfigChanging(value);
					this.SendPropertyChanging();
					this._MachineConfig = value;
					this.SendPropertyChanged("MachineConfig");
					this.OnMachineConfigChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Products", DbType="Bit")]
		public System.Nullable<bool> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				if ((this._Products != value))
				{
					this.OnProductsChanging(value);
					this.SendPropertyChanging();
					this._Products = value;
					this.SendPropertyChanged("Products");
					this.OnProductsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Users", DbType="Bit")]
		public System.Nullable<bool> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				if ((this._Users != value))
				{
					this.OnUsersChanging(value);
					this.SendPropertyChanging();
					this._Users = value;
					this.SendPropertyChanged("Users");
					this.OnUsersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reset", DbType="Bit")]
		public System.Nullable<bool> Reset
		{
			get
			{
				return this._Reset;
			}
			set
			{
				if ((this._Reset != value))
				{
					this.OnResetChanging(value);
					this.SendPropertyChanging();
					this._Reset = value;
					this.SendPropertyChanged("Reset");
					this.OnResetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reprint", DbType="Bit")]
		public System.Nullable<bool> Reprint
		{
			get
			{
				return this._Reprint;
			}
			set
			{
				if ((this._Reprint != value))
				{
					this.OnReprintChanging(value);
					this.SendPropertyChanging();
					this._Reprint = value;
					this.SendPropertyChanged("Reprint");
					this.OnReprintChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Maintenance", DbType="Bit")]
		public System.Nullable<bool> Maintenance
		{
			get
			{
				return this._Maintenance;
			}
			set
			{
				if ((this._Maintenance != value))
				{
					this.OnMaintenanceChanging(value);
					this.SendPropertyChanging();
					this._Maintenance = value;
					this.SendPropertyChanged("Maintenance");
					this.OnMaintenanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Find", DbType="Bit")]
		public System.Nullable<bool> Find
		{
			get
			{
				return this._Find;
			}
			set
			{
				if ((this._Find != value))
				{
					this.OnFindChanging(value);
					this.SendPropertyChanging();
					this._Find = value;
					this.SendPropertyChanged("Find");
					this.OnFindChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Desktop", DbType="Bit")]
		public System.Nullable<bool> Desktop
		{
			get
			{
				return this._Desktop;
			}
			set
			{
				if ((this._Desktop != value))
				{
					this.OnDesktopChanging(value);
					this.SendPropertyChanging();
					this._Desktop = value;
					this.SendPropertyChanged("Desktop");
					this.OnDesktopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Materials", DbType="Bit")]
		public System.Nullable<bool> Materials
		{
			get
			{
				return this._Materials;
			}
			set
			{
				if ((this._Materials != value))
				{
					this.OnMaterialsChanging(value);
					this.SendPropertyChanging();
					this._Materials = value;
					this.SendPropertyChanged("Materials");
					this.OnMaterialsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductProfile", DbType="Bit")]
		public System.Nullable<bool> ProductProfile
		{
			get
			{
				return this._ProductProfile;
			}
			set
			{
				if ((this._ProductProfile != value))
				{
					this.OnProductProfileChanging(value);
					this.SendPropertyChanging();
					this._ProductProfile = value;
					this.SendPropertyChanged("ProductProfile");
					this.OnProductProfileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabelEditor", DbType="Bit")]
		public System.Nullable<bool> LabelEditor
		{
			get
			{
				return this._LabelEditor;
			}
			set
			{
				if ((this._LabelEditor != value))
				{
					this.OnLabelEditorChanging(value);
					this.SendPropertyChanging();
					this._LabelEditor = value;
					this.SendPropertyChanged("LabelEditor");
					this.OnLabelEditorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BobbinMonitor", DbType="Bit")]
		public System.Nullable<bool> BobbinMonitor
		{
			get
			{
				return this._BobbinMonitor;
			}
			set
			{
				if ((this._BobbinMonitor != value))
				{
					this.OnBobbinMonitorChanging(value);
					this.SendPropertyChanging();
					this._BobbinMonitor = value;
					this.SendPropertyChanged("BobbinMonitor");
					this.OnBobbinMonitorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BobbinTracer", DbType="Bit")]
		public System.Nullable<bool> BobbinTracer
		{
			get
			{
				return this._BobbinTracer;
			}
			set
			{
				if ((this._BobbinTracer != value))
				{
					this.OnBobbinTracerChanging(value);
					this.SendPropertyChanging();
					this._BobbinTracer = value;
					this.SendPropertyChanged("BobbinTracer");
					this.OnBobbinTracerChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Covers")]
	public partial class Covers : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _coverId;
		
		private string _code;
		
		private string _customer;
		
		private string _program;
		
		private string _manyear;
		
		private string _style;
		
		private string _colour;
		
		private bool _active;
		
		private string _imagePath;
		
		private EntitySet<Product> _Products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncoverIdChanging(int value);
    partial void OncoverIdChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    partial void OncustomerChanging(string value);
    partial void OncustomerChanged();
    partial void OnprogramChanging(string value);
    partial void OnprogramChanged();
    partial void OnmanyearChanging(string value);
    partial void OnmanyearChanged();
    partial void OnstyleChanging(string value);
    partial void OnstyleChanged();
    partial void OncolourChanging(string value);
    partial void OncolourChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    partial void OnimagePathChanging(string value);
    partial void OnimagePathChanged();
    #endregion
		
		public Covers()
		{
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_coverId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int coverId
		{
			get
			{
				return this._coverId;
			}
			set
			{
				if ((this._coverId != value))
				{
					this.OncoverIdChanging(value);
					this.SendPropertyChanging();
					this._coverId = value;
					this.SendPropertyChanged("coverId");
					this.OncoverIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string customer
		{
			get
			{
				return this._customer;
			}
			set
			{
				if ((this._customer != value))
				{
					this.OncustomerChanging(value);
					this.SendPropertyChanging();
					this._customer = value;
					this.SendPropertyChanged("customer");
					this.OncustomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_program", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string program
		{
			get
			{
				return this._program;
			}
			set
			{
				if ((this._program != value))
				{
					this.OnprogramChanging(value);
					this.SendPropertyChanging();
					this._program = value;
					this.SendPropertyChanged("program");
					this.OnprogramChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_manyear", DbType="VarChar(4) NOT NULL", CanBeNull=false)]
		public string manyear
		{
			get
			{
				return this._manyear;
			}
			set
			{
				if ((this._manyear != value))
				{
					this.OnmanyearChanging(value);
					this.SendPropertyChanging();
					this._manyear = value;
					this.SendPropertyChanged("manyear");
					this.OnmanyearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_style", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string style
		{
			get
			{
				return this._style;
			}
			set
			{
				if ((this._style != value))
				{
					this.OnstyleChanging(value);
					this.SendPropertyChanging();
					this._style = value;
					this.SendPropertyChanged("style");
					this.OnstyleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colour", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string colour
		{
			get
			{
				return this._colour;
			}
			set
			{
				if ((this._colour != value))
				{
					this.OncolourChanging(value);
					this.SendPropertyChanging();
					this._colour = value;
					this.SendPropertyChanged("colour");
					this.OncolourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_imagePath", DbType="VarChar(500)")]
		public string imagePath
		{
			get
			{
				return this._imagePath;
			}
			set
			{
				if ((this._imagePath != value))
				{
					this.OnimagePathChanging(value);
					this.SendPropertyChanging();
					this._imagePath = value;
					this.SendPropertyChanged("imagePath");
					this.OnimagePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Covers_Product", Storage="_Products", ThisKey="coverId", OtherKey="coverId")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Covers = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Covers = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Types")]
	public partial class Types : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _typeId;
		
		private string _code;
		
		private string _name;
		
		private string _comment;
		
		private bool _active;
		
		private string _imagePath;
		
		private EntitySet<Product> _Products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntypeIdChanging(int value);
    partial void OntypeIdChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OncommentChanging(string value);
    partial void OncommentChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    partial void OnimagePathChanging(string value);
    partial void OnimagePathChanged();
    #endregion
		
		public Types()
		{
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int typeId
		{
			get
			{
				return this._typeId;
			}
			set
			{
				if ((this._typeId != value))
				{
					this.OntypeIdChanging(value);
					this.SendPropertyChanging();
					this._typeId = value;
					this.SendPropertyChanged("typeId");
					this.OntypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comment", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string comment
		{
			get
			{
				return this._comment;
			}
			set
			{
				if ((this._comment != value))
				{
					this.OncommentChanging(value);
					this.SendPropertyChanging();
					this._comment = value;
					this.SendPropertyChanged("comment");
					this.OncommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_imagePath", DbType="VarChar(500)")]
		public string imagePath
		{
			get
			{
				return this._imagePath;
			}
			set
			{
				if ((this._imagePath != value))
				{
					this.OnimagePathChanging(value);
					this.SendPropertyChanging();
					this._imagePath = value;
					this.SendPropertyChanged("imagePath");
					this.OnimagePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Types_Product", Storage="_Products", ThisKey="typeId", OtherKey="typeId")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Types = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Types = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Users")]
	public partial class tbl_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Rights;
		
		private string _Operatortag;
		
		private bool _Active;
		
		private string _CardCode;
		
		private System.Data.Linq.Binary _img;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnRightsChanging(string value);
    partial void OnRightsChanged();
    partial void OnOperatortagChanging(string value);
    partial void OnOperatortagChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnCardCodeChanging(string value);
    partial void OnCardCodeChanged();
    partial void OnimgChanging(System.Data.Linq.Binary value);
    partial void OnimgChanged();
    #endregion
		
		public tbl_User()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rights", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Rights
		{
			get
			{
				return this._Rights;
			}
			set
			{
				if ((this._Rights != value))
				{
					this.OnRightsChanging(value);
					this.SendPropertyChanging();
					this._Rights = value;
					this.SendPropertyChanged("Rights");
					this.OnRightsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Operatortag", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Operatortag
		{
			get
			{
				return this._Operatortag;
			}
			set
			{
				if ((this._Operatortag != value))
				{
					this.OnOperatortagChanging(value);
					this.SendPropertyChanging();
					this._Operatortag = value;
					this.SendPropertyChanged("Operatortag");
					this.OnOperatortagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardCode", DbType="VarChar(50)")]
		public string CardCode
		{
			get
			{
				return this._CardCode;
			}
			set
			{
				if ((this._CardCode != value))
				{
					this.OnCardCodeChanging(value);
					this.SendPropertyChanging();
					this._CardCode = value;
					this.SendPropertyChanged("CardCode");
					this.OnCardCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_img", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary img
		{
			get
			{
				return this._img;
			}
			set
			{
				if ((this._img != value))
				{
					this.OnimgChanging(value);
					this.SendPropertyChanging();
					this._img = value;
					this.SendPropertyChanged("img");
					this.OnimgChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
